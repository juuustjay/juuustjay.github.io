<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JuuustJayの博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-11-17T12:22:12.018Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>JuuustJay</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端</title>
    <link href="http://example.com/2021/09/22/%E5%89%8D%E7%AB%AF/"/>
    <id>http://example.com/2021/09/22/%E5%89%8D%E7%AB%AF/</id>
    <published>2021-09-22T07:16:53.000Z</published>
    <updated>2021-11-17T12:22:12.018Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.bilibili.com/video/BV14J4114768?p=1&amp;spm_id_from=pageDriver">https://www.bilibili.com/video/BV14J4114768?p=1&amp;spm_id_from=pageDriver</a></p><h2 id="学习路线"><a href="#学习路线" class="headerlink" title="学习路线"></a>学习路线</h2><h3 id="HTML5"><a href="#HTML5" class="headerlink" title="HTML5"></a>HTML5</h3><p>所占课时20%，学习HTML5基础，主要学习最常见的没有兼容性的HTML标签</p><h3 id="CSS3"><a href="#CSS3" class="headerlink" title="CSS3"></a>CSS3</h3><p>所占课时50%，学习CSS3基础，主要学习最常用没有兼容性的CSS样式，利用前面学习的标签完成传统的PC网页布局</p><h3 id="H5C3"><a href="#H5C3" class="headerlink" title="H5C3"></a>H5C3</h3><p>所占课时10%，学习HTML5新增的标签，CSS3样式，有一定的兼容性，可以和未来接轨</p><h3 id="项目实现"><a href="#项目实现" class="headerlink" title="项目实现"></a>项目实现</h3><p>所占课时20%，总和以前学习的知识点，贴近于实际开发，制作品优购电商网站，完成首页，列表页，注册页制作</p><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><h3 id="网页"><a href="#网页" class="headerlink" title="网页"></a>网页</h3><p><strong>网站</strong>是指在因特网上根据一定的规则，使用HTML等制作的用于展示特定内容相关的网页集合</p><p><strong>网页</strong>是网站中的一“页”，通常是HTML格式的文件，它要通过阅读器来阅读</p><p><strong>网页是构成网站的基本元素</strong>，它通常由图片、链接、文字、声音、视频等<strong>元素</strong>组成，通常我们看到的网页，常见以**.html<strong>或</strong>.html<strong>后缀结尾的文件，因此将其俗称</strong>HTML文件**。</p><p><strong>HTML</strong>指的是<strong>超文本标记语言（Hyper Test Markup Language）</strong>，它是用来描述的一种语言。它不是一种编程语言，而是一种<strong>标记语言（markup languag）</strong>。</p><p><strong>标记语言</strong>是一套标记标签</p><p><strong>超文本</strong></p><ol><li>可以加入图片，声音，动画，多媒体等内容（超越了文本限制）</li><li>可以从一个文件跳转到另一个文件，与世界各地主机的文件连接（超级链接文本）</li></ol><h3 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h3><p>常用浏览器：<strong>火狐</strong>，<strong>谷歌</strong>，<strong>Safari</strong>，<strong>Opera</strong>，<strong>Edge</strong> </p><p><strong>浏览器内核（渲染引擎）</strong>：负责读取网页内容，整理讯息，计算网页的显示方式并显示页面</p><ul><li>IE               Trident</li><li>firefox      Gecko</li><li>Safari        WebKit</li><li>chrome    Blink</li><li>Opera       Blink</li></ul><p>注：Blink其实是WebKit的分支，目前国内一般的浏览器都会采用WebKit/Blink内核</p><h3 id="Web标准（重要）"><a href="#Web标准（重要）" class="headerlink" title="Web标准（重要）"></a>Web标准（重要）</h3><p><strong>Web标准</strong>是W3C组织和其他标准化组织指定的一系列<strong>标准的集合</strong>，W3C（万维网联盟）是国际最著名的标准化组织</p><p><strong>为什么需要Web标准</strong>：</p><ol><li>让不同的开发人员写出的页面更标准，更统一</li><li>在不同的浏览器上显示效果统一</li><li>除此之外，还具有一下有点<ol><li>让Web的发展前景更广阔</li><li>内容能被更广泛的设备访问</li><li>更容易被搜索引擎搜索</li><li>降低网站流量费用</li><li>使网站更易于维护</li><li>提高页面浏览速度</li></ol></li></ol><p><strong>Web标准的构成</strong>：包括<strong>结构（Structure）</strong>，<strong>表现（ Presentation）</strong>，<strong>行为（Behavior）</strong></p><ol><li>结构：结构用于对<strong>网页元素</strong>进行整理和分类，现阶段主要学的是HTML</li><li>表现：表现用于设置网页元素的版式，颜色，大小等<strong>外观样式</strong>，主要指的是CSS</li><li>行为：行为是指网页模型的定义及<strong>交互</strong>的编写，现阶段主要学的是Javascript</li></ol><p>Web标准提出的最佳体验.方案：<strong>结构，行为，样式相分离</strong>，简单理解就是结构写到<strong>HTML</strong>文件中，<strong>表现</strong>写到<strong>CSS</strong>文件中，<strong>行为</strong>写到<strong>JavaScript</strong>文件中</p><h3 id="HTML语法规范"><a href="#HTML语法规范" class="headerlink" title="HTML语法规范"></a>HTML语法规范</h3><h4 id="基本语法概述"><a href="#基本语法概述" class="headerlink" title="基本语法概述"></a>基本语法概述</h4><ol><li>HTML标签是由尖括号包围的关键词，例如html</li><li>HTML标签通常是成对出现的，我们称之为<strong>双标签</strong>，标签对中第一个标签是<strong>开始标签</strong>，第二个标签是<strong>结束标签</strong></li><li>有些特殊的标签必须是单个标签（极少情况），我们称之为单标签</li></ol><h4 id="标签关系"><a href="#标签关系" class="headerlink" title="标签关系"></a>标签关系</h4><p>双标签关系可以分为两类：包含关系和并列关系</p><h3 id="基本结构标签"><a href="#基本结构标签" class="headerlink" title="基本结构标签"></a>基本结构标签</h3><p>每个网页都会有一个基本的结构标签（也称为骨架标签），页面内容也是在这些基本标签上书写</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-------------------------------&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span>  </span><br><span class="line"><span class="comment">&lt;!--HTML标签：页面中最大的标签，我们称为根标签--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span>  </span><br><span class="line"><span class="comment">&lt;!--文档的头部：注意在head标签中我们必须要设置的标签是title --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--文档的标题：让页面拥有一个属于自己的网页标题--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span>  </span><br><span class="line"><span class="comment">&lt;!--文档的主体：元素包含文档的所有内容，页面内容基本都是放到body里面的--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文档类型标签"><a href="#文档类型标签" class="headerlink" title="文档类型标签"></a>文档类型标签</h3><!DOCTYPE><p> 文档类型声明，作用就是告诉浏览器使用哪种HTML版本来显示网页</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--当前页面采取的是HTML5版本来显示页面--&gt;</span></span><br></pre></td></tr></table></figure><p>注意：</p><ol><li>文档类型声明位于文档中的最前面的位置，处于html标签之前</li><li>它不是一个HTML标签，它就是文档类型声明标签</li></ol><h3 id="lang语言种类"><a href="#lang语言种类" class="headerlink" title="lang语言种类"></a>lang语言种类</h3><p>用来定义当前文档显示的语言</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--en定义语言为英语--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--zh-CN定义语言为中文--&gt;</span></span><br></pre></td></tr></table></figure><p>简单来说，定义为en就是英文网页，定义为zh-CN就是中文网页</p><p>其实对于文档显示来说，定义成en的文档也可以显示中文，定义成ch-CN的文档也可以显示英文</p><p> 这个属性对于浏览器和搜索引擎还是有作用，浏览器会自动判断是否需要翻译</p><h3 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h3><p>字符集（Character set）是多个字符的集合，以便计算机能够识别和存储各种文字。</p><p>在head标签中，可以通过meta标签的charset属性来规定HTML文档应该使用哪种字符编码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>charset常用的值有：GB2312，BIG5，GBK和UTF-8，其中UTF-8也被称为万国码，基本包含了全世界所有国家需要用到的字符</p><h3 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h3><h4 id="标题标签-重要"><a href="#标题标签-重要" class="headerlink" title="标题标签(重要)"></a>标题标签(重要)</h4><p>为了使网页更具有语义化，我们经常会在页面中用到标题标签，HTML提供了6个等级的网页标题，即h1到h6</p><p><strong>标签语义</strong>：作为标题使用，并且依据重要性递减</p><p><strong>特点</strong>：</p><ol><li>加了标题的文字，字号也会依次变大</li></ol><h4 id="段落和换行标签（重要）"><a href="#段落和换行标签（重要）" class="headerlink" title="段落和换行标签（重要）"></a>段落和换行标签（重要）</h4><p>在网页中，要把文字有条理地显示出来，就要将这些文字分段显示，在HTML标签中，<p>标签用于定义段落，它可以将整个网页分为若干个段落 </p><p><strong>标签语义</strong>：把HTML文档分割为若干段落</p><p><strong>特点</strong>：</p><ol><li>文本在一个段落中会根据浏览器窗口的大小自动换行</li><li>段落与段落之间保有空隙</li></ol><p>在HTML中，一个段落中的文字会从左到右依次排列，知道浏览器窗口的右端，然后才自动换行，如果希望某段文本强制换行显示，就需要使用换行标签br </p><p><strong>标签语义</strong>：强制换行</p><p><strong>特点</strong>：</p><ol><li>单标签</li><li>只是简单地开始新的一行，跟段落不一样，段落之间会插入一些垂直的间距</li></ol><h4 id="文本格式化标签"><a href="#文本格式化标签" class="headerlink" title="文本格式化标签"></a>文本格式化标签</h4><p>在网页中，有时需要为文字设置<strong>粗体</strong>、<em>斜体</em>或<u>下斜线</u>等效果，这十就需要用到HTNL中的文本格式化标签，使文字以特殊的方式显示。</p><p><strong>标签语义</strong>：突出重要性，比普通文字更重要</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--加粗，推荐使用strong标签，语义更强烈--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>加粗<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--倾斜，推荐使用em标签，语义更强烈--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span>倾斜<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span>倾斜<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--删除线，推荐使用del标签，语义更强烈--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span>删除线<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">s</span>&gt;</span>删除线<span class="tag">&lt;/<span class="name">s</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--下划线，推荐使用ins标签，语义更强烈--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ins</span>&gt;</span>下划线<span class="tag">&lt;/<span class="name">ins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>下划线<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="div和span标签"><a href="#div和span标签" class="headerlink" title="div和span标签"></a>div和span标签</h4><p>div和span是没有语义的，他们就是一个盒子，用来装内容的 </p><p><strong>特点</strong>：</p><ol><li>div标签用来布局，但是一行只能有一个div，大盒子</li><li>span标签用来布局，一行可以有多个div，小盒子</li></ol><h4 id="图像标签和路径（重要）"><a href="#图像标签和路径（重要）" class="headerlink" title="图像标签和路径（重要）"></a>图像标签和路径（重要）</h4><h5 id="图像标签"><a href="#图像标签" class="headerlink" title="图像标签"></a>图像标签</h5><p>在html标签中，img标签用于定义HTML页面中的图像</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图像URL&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>src是img标签的必须属性，它用于指定图像文件的路径和文件名</p><p><strong>属性</strong>：属于这个标签的特性</p><table><thead><tr><th>属性</th><th>属性值</th><th>说明</th></tr></thead><tbody><tr><td>src</td><td>图片路径</td><td>必须属性</td></tr><tr><td>alt</td><td>文本</td><td>替换文本，图像不能显示的文字</td></tr><tr><td>title</td><td>文本</td><td>提示文本，鼠标放到图像上，显示的文字</td></tr><tr><td>width</td><td>像素</td><td>设置图像的宽度</td></tr><tr><td>height</td><td>像素</td><td>设置图像的高度</td></tr><tr><td>border</td><td>像素</td><td>设置图像的边框粗细</td></tr></tbody></table><p> <strong>图像标签属性注意点</strong>：</p><ol><li>图像标签可以拥有多个属性，必须写在标签名的后面</li><li>属性之间不分先后顺序，标签名与属性、属性与属性之间均以空格分开</li><li>属性采用键值对的格式，即key=“value”的格式，属性=“属性值”。</li></ol><h5 id="目录文件夹和根目录"><a href="#目录文件夹和根目录" class="headerlink" title="目录文件夹和根目录"></a>目录文件夹和根目录</h5><p>实际工作中，我们的文件不能随便乱放，否则用起来很难快速的找到他们，因此我们需要一个文件夹管理他们</p><p><strong>目录文件夹</strong>：就是普通文件夹，里面不过存放了我们做页面需要的相关素材，比如html文件、图片等</p><p><strong>根目录</strong>：打开目录文佳佳的第一层就是根目录</p><h5 id="路径"><a href="#路径" class="headerlink" title="路径"></a>路径</h5><p>页面中的图片会非常多，通常我们会新建一个文件夹来存放这些图像文件（image），这时再查找图像，就需要采用路径的方式来指定图像文件的位置。路径可以分为相对路径，绝对路径</p><p><strong>相对路径</strong><br>以引用文件所在位置为参考基础，而建立出的目录路径，简单来说，图片相对于html页面的位置</p><table><thead><tr><th>相对路径分类</th><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>同一级路径</td><td></td><td>图像文件位于HTML文件同一级</td></tr><tr><td>下一级路径</td><td>/</td><td>图像文件位于HTML文件下一级</td></tr><tr><td>上一级路径</td><td>../</td><td>图像文件位于HTML文件上一级</td></tr></tbody></table><p>相对论是从代码所在的这个文件出发，去寻找目标文件的，而我们这里所说的上一级，下一级和同一级就是图片相对于HTML页面的位置</p><p><strong>绝对路径</strong><br>是指目录下的绝对位置，直接到达目标位置，通常是盘符开始的路径</p><p>绝对路径的符号\</p><h4 id="超链接标签（重要）"><a href="#超链接标签（重要）" class="headerlink" title="超链接标签（重要）"></a>超链接标签（重要）</h4><p>在HTML标签中，a标签用于定义超链接，作用是从一个页面到另一个页面</p><p><strong>属性</strong>：</p><ol><li>href：用于指定联机目标的url地址，（必须属性）党委标签应用href属性时，他就具有有了超链接的功能</li><li>target：用于指定链接页面的打开方式，其中_self为默认值， _blank为在新窗口打开方式</li></ol><p><strong>链接分类</strong>：</p><ol><li>外部链接，href的值为一个网址</li><li>内部链接，网站内部页面之间的相互链接，href的值为内部页面的名称</li><li>空链接，href为#</li><li>下载链接，如果href里面地址是一个文件或者压缩包，会下载这个文件</li><li>网页元素链接，在网页中的各种网页元素，如文本、图像、表格、视频等都可以添加超链接</li><li>锚点链接，点击链接，可以快速定位到页面中的某个位置，href中为#XXX，XXX为目标位置的id属性</li></ol><h4 id="注释标签"><a href="#注释标签" class="headerlink" title="注释标签"></a>注释标签</h4><p>如果需要在HTML文档中添加一些便于阅读和理解担忧不需要显示在页面中的注释文字，就需要使用注释标签。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--HTML中的注释，快捷键为ctrl + /--&gt;</span></span><br></pre></td></tr></table></figure><p>注释标签的内容是给程序员看的，这个代码是不执行不显示到页面中的</p><p>添加注释是为了更好地解释代码的功能，以便于相关开发人员理解和阅读代码，程序是不会执行注释内容的</p><h4 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h4><p>在HTML页面中。一些特殊的符号很难或者不方便直接使用，此时我们就可以使用下面的字符来替代。</p><p><img src="https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/html_png_1.png"></p><h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><p>表格主要用于显示展示数据，因为它可以让数据显示的非常规整，可读性非常好。特别是后台展示数的时候，能够熟练运用表格就显得很重要。一个清爽简约的表格能够把繁杂的数据表现得很有条理。</p><p>table是用来定义表格的标签</p><p>tr是用来定义表格中的行，必须嵌套在table标签中</p><p>td是用来定义单元格，必须嵌套在tr标签中</p><p>th标签表示HTML表格的表头部分，表头单元格里面的文本内容加粗居中显示</p><p><strong>属性</strong>：</p><table><thead><tr><th>属性名</th><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>align</td><td>left、center</td><td>规定表格相对周围元素的对齐方式</td></tr><tr><td>border</td><td>1或“”</td><td>规定表格单元是否拥有边框，默认为“”，表示没有边框</td></tr><tr><td>cellpadding</td><td>像素</td><td>规定单元边沿与其内容之间的空白，默认为1像素</td></tr><tr><td>cellspaceing</td><td>像素</td><td>规定单元格之间的空白，默认2像素</td></tr><tr><td>width</td><td>像素或者百分比</td><td>规定表格的宽度</td></tr></tbody></table><p><strong>表格结构标签</strong><br>在使用中，因为表格可能很长，为了更好的表示表格的语义，可以将表格分割成表格头部和表格主题两大部分</p><p>在表格标签中，分别用：thead标签表格的头部区域，tbody标签表格的主体区域。这样可以更好的分清表格结构</p><p>thead:用于定义表格的头部。标签内部必须拥有tr标签，一般是位于第一行</p><p>tbody：用于定义表格的主体，主要用于放数据本体</p><p>**合并单元格 **</p><p>合并单元格方式：</p><ol><li>跨行合并：rowspan=”合并单元格的个数“</li><li>跨列合并：colspan=”合并单元格的个数“ </li></ol><p>目标单元格：（写合并代码）：</p><ol><li>跨行：最上侧单元格为目标单元格，写合并代码</li><li>跨列：最左侧单元格为目标单元格，写合并代码   </li></ol><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><p>列表用来布局，列表最大的特点就是整齐，有序，它作为布局会更加自由和方便，根据使用情景不同，列表可以分为三大类：无序列表，有序列表和自定义列表</p><h5 id="无序列表（重要）"><a href="#无序列表（重要）" class="headerlink" title="无序列表（重要）"></a>无序列表（重要）</h5><p>ul标签表示HTML页面中项目的无序列表，一般会以项目符号呈现列表项，而列表项使用li标签定义</p><p><strong>注意</strong>：</p><ol><li>无序列表的各个列表项之间没有顺序级别之分，是并列的</li><li>ul只能嵌套li，直接在ul标签中输入其他标签或者文字的做法是不被允许的</li><li>li标签相当于一个容器，可以容纳所有元素</li><li>无序列表会带有自己的样式属性，但在实际使用时，我们会使用CSS来设置</li></ol><h5 id="有序列表（理解）"><a href="#有序列表（理解）" class="headerlink" title="有序列表（理解）"></a>有序列表（理解）</h5><p>有序列表即为有排列顺序的列表，其各个列表项会按照一定的顺序排列定义，在HTML标签中，ol标签用于定义有序列表，列表排序以数字来显示，并且使用li标签来定义列表项</p><p><strong>注意</strong>：</p><ol><li>ol中只能嵌套li，直接在ol标签中输入其他标签或者文字的做法是不被允许的</li><li>li标签相当于一个容器，可以容纳所有元素</li><li>有序列表会带有自己样式属性，但在实际使用时，我们会使用CSS来设置</li></ol><h5 id="自定义列表（重要）"><a href="#自定义列表（重要）" class="headerlink" title="自定义列表（重要）"></a>自定义列表（重要）</h5><p>自定义列表的使用场景： 自定义列表常用于对术语或名词进行解释或描述，定义列表的列表项前没有任何项目符号 </p><p>在HTML标签中，dl标签用于定义描述列表（或定义列表），该标签会与dt（定义项目/名字）或dd（描述每一个项目/名字）一起使用</p><p><strong>注意</strong>：</p><ol><li>dl里面只能包含dt和dd</li><li>dt和dd个数没有限制，经常是一个dt对应多个dd</li></ol><h4 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h4><p>使用表单目的是为了收集用户信息，在网页中，我们也需要跟用户进行交互，收集用户资料，此时就需要表单</p><p>在HTML中，一个完整的表单通常由表单域，表单控件（也称表单元素）和提示信息3个部分构成 </p><h5 id="表单域"><a href="#表单域" class="headerlink" title="表单域"></a>表单域</h5><p>表单域是一个包含表单元素的区域，在HTML标签中，form标签用来定义表单域，以实现用户信息的收集和传递</p><p>form会把他范围内的表单元素信息提交给服务器</p><p> <strong>注意</strong>：</p><ol><li>我们写表单元素之前，应该有个表单域把他们进行包含</li><li>表单域就是form标签</li></ol><h5 id="表单控件"><a href="#表单控件" class="headerlink" title="表单控件"></a>表单控件</h5><p>在表单域中可以定义各种表单元素，这些表单元素就是允许用户在表单中输入或者选择的内容控件</p><h6 id="input"><a href="#input" class="headerlink" title="input"></a><strong>input</strong></h6><p>在英文单词中，input是输入的意思，而在表单元素中input标签用于收集用户信息，在input标签中，包含一个type属性没根据不容的type属性值，输入字段拥有很多种形式（可以是文本字段，复选框，掩码后的文本控件，单选按钮，按钮等）</p><p><strong>注意</strong>：</p><ol><li>input标签为单标签</li><li>type属性设置不同的属性值用来指定不同的控件类型</li></ol><p>type属性值：</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>button</td><td>定义可点击按钮（多数情况下，用于通过Javascript启动脚本）</td></tr><tr><td>checkbox</td><td>定义复选框</td></tr><tr><td>file</td><td>定义输入字段和浏览按钮，供文件上传</td></tr><tr><td>hidden</td><td>定义隐藏的输入字段</td></tr><tr><td>image</td><td>定义图像形式的提交按钮</td></tr><tr><td>password</td><td>定义密码字段，该字段中的字符被掩码</td></tr><tr><td>radio</td><td>定义单选按钮</td></tr><tr><td>reset</td><td>定义重置按钮，重置按钮会清楚表单中的所有数据</td></tr><tr><td>submit</td><td>定义提交按钮，提交按钮会把表单数据发送到服务器</td></tr><tr><td>text</td><td>定义单行的输入字段，用户可在其中输入文本，默认宽度为20个字符</td></tr></tbody></table><p>除type属性外，input标签还有其他很多属性，其常用属性如下：</p><table><thead><tr><th>属性</th><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>由用户自定义</td><td>定义input元素的名称</td></tr><tr><td>value</td><td>由用户自定义</td><td>规定input元素的值</td></tr><tr><td>checked</td><td>checked</td><td>规定input元素首次加载时应当被选中</td></tr><tr><td>maxlength</td><td>正整数</td><td>规定输入字段中的字符的最大长度</td></tr></tbody></table><p><strong>注意</strong>：</p><ol><li>name和value是每个表单元素都有的属性值，主要给后台人员使用</li><li>name表单元素的名字，要求单选按钮和复选框要有相同的name值</li><li>checked属性主要针对于单选按钮和复选框，主要作用是打开页面，就要可以默认选中某个表单元素</li><li>maxlength使用户可以在表单元素输入的最大字符数，一般较少使用</li><li>value可以设置表单元素打开页面就默认显示的文字</li><li>name属性后面的值是自定义</li><li>radio（或者checkbox）如果是一组，我们必须给他们命名到同一组</li></ol><h6 id="label"><a href="#label" class="headerlink" title="label"></a>label</h6><p>label标签为input元素定义标注（标签）</p><p>label标签用于绑定一个表单元素，当点击label标签内的文本时，浏览器就会自动将焦点（光标）转到或者选择对应的表单元素上，用来增加用户体验</p><p>label标签的for属性应当与相关元素的id属性相同</p><h6 id="select"><a href="#select" class="headerlink" title="select"></a>select</h6><p> 在页面中，如果有多个选项让用户选择，并且想要节约页面空间，我们可以使用select标签控件定义下拉列表</p><p><strong>注意</strong>：</p><ol><li>select中至少包含一对option</li><li>在option中定义selected属性时，定义为selecetd，指定当前项即为默认选中项</li></ol><h6 id="textarea"><a href="#textarea" class="headerlink" title="textarea"></a>textarea</h6><p>在用户输入内容较多的情况下，我们就不能使用文本框表单了，此时我们可以使用textarea标签，在表单元素中，textarea标签适用于定义多行文本输入的控件</p><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><h3 id="HTML的局限性"><a href="#HTML的局限性" class="headerlink" title="HTML的局限性"></a><strong>HTML的局限性</strong></h3><p>HTML只关注内容的而予以，比如h1表明这是一个大标题，p表示这是一个段落，很早的时候，世界上网站虽多，但是他们都有一个共同的特点：丑</p><h3 id="CSS-1"><a href="#CSS-1" class="headerlink" title="CSS"></a><strong>CSS</strong></h3><p>CSS是层叠样式表的简称，CSS也是一种标记语言，主要用于设置HTML页面中的文本内容，图片的外形以及版面的布局和外观显示样式，让我们的网页更加丰富多彩，布局更加灵活自如</p><p>简单来说:CSS可以美化HTML，让HTML更漂亮，让页面布局更简单</p><p>CSS最大价值：由HTML专注去做结构呈现，样式交给CSS，即结构与样式相分离</p><h3 id="CSS语法规范"><a href="#CSS语法规范" class="headerlink" title="CSS语法规范"></a>CSS语法规范</h3><p>在使用HTML时，需要遵从一定的规范，CSS也是如此。要想熟练地使用CSS对网页进行修饰，首先需要了解CSS样式规则，</p><p>CSS规则由两个主要的部分构成：选择器以及一条或多条声明</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/* 选择器 &#123;样式&#125; */</span><br><span class="line">/* 给谁改样式&#123;改什么样式&#125; */</span><br></pre></td></tr></table></figure><ul><li>选择器是用于指定CSS样式的HTML标签，花括号内是对该对象设置的具体样式</li><li>属性和属性值以键值对的形式出现，属性和属性值之间用：分开</li></ul><h3 id="CSS代码风格"><a href="#CSS代码风格" class="headerlink" title="CSS代码风格"></a>CSS代码风格</h3><p>以下代码书写风格不是强制规范，而是符合实际开发书写方式</p><h4 id="样式格式书写"><a href="#样式格式书写" class="headerlink" title="样式格式书写"></a>样式格式书写</h4><ol><li>紧凑格式</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123; <span class="attribute">color</span>: deeppink;<span class="attribute">font-size</span>: <span class="number">20px</span>;&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>展开格式</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: pink;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更推荐使用第二种格式，因为更加直观 </p><h4 id="样式大小写风格"><a href="#样式大小写风格" class="headerlink" title="样式大小写风格"></a>样式大小写风格</h4><ol><li>大写</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">H3</span> &#123;</span><br><span class="line"><span class="attribute">COLOR</span>: PINK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>小写</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">h3 &#123;</span><br><span class="line">color: pink</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更推荐样式选择器，属性名，属性值关键字全部使用小写，特殊情况除外</p><h4 id="样式空格风格"><a href="#样式空格风格" class="headerlink" title="样式空格风格"></a>样式空格风格</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>属性值前面，冒号后面，保留一个空格</p><h3 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h3><h4 id="标签选择器"><a href="#标签选择器" class="headerlink" title="标签选择器"></a>标签选择器</h4><p>标签选择器是指用HTML标签名称作为选择器，按标签名称分类，为页面中某一类标签指定统一的CSS样式。</p><p>作用：标签选择器可以把某一类标签全部选择出来，比如所有的div标签和所有的span标签</p><p>优点：能快速为页面中同类型的标签统一设置样式</p><p>缺点：不能设计差异化样式，只能选择全部的当前标签</p><h4 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a>类选择器</h4><p>如果想要差异化选择不同的标签，单独选一个或者某几个标签，可以使用类选择器</p><p>结构：需要使用class属性来调用class类的意思</p><p><strong>注意</strong>：</p><ol><li>类选择器使用英文点进行标识，后面紧跟类名（自定义）</li><li>可以理解为给标签取了个名字</li><li>长名称或词组可以使用中横线来为选择器命名</li><li>不要使用纯数字，中文等命名，尽量使用英文字母来表示</li><li>命名要有意义，尽量使别人一眼就知道这个类名的目的</li></ol><h5 id="多类名"><a href="#多类名" class="headerlink" title="多类名"></a>多类名</h5><p>我们可以给一个标签指定多个类名，从而达到更多的选择目的。这些类名都可以选出这个标签，简单理解就是一个标签有多个名字</p><p>这样可以节省CSS代码量，统一修改也很方便</p><p><strong>多类名使用方式</strong></p><ol><li>在标签class属性中写多个类名</li><li>多个类名中间必须用空格分开</li><li>这个标签就可以分别具有这些类名的样式</li></ol><p><strong>多类名使用场景</strong></p><ol><li>可以把一些标签元素相同的样式（共同的部分）放到一个类里面</li><li>这些标签都可以调用这个公共的类，然后在调用自己独有的类</li></ol><h4 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a>id选择器</h4><p>id选择器可以为标有特定的HTML元素指定特定的样式，HTML元素以id属性来设置id选择器，CSS中id选择器以#来定义</p><p><strong>注意</strong>：id属性只能在每个HTML文档中出现一次</p><p><strong>id选择器和类选择器的区别</strong></p><ol><li>类选择器好比人的名字，一个人可以有多个名字，同时一个名字也可以被多个人使用</li><li>id选择器好比人的身份证号码，全中国是唯一的，不得重复</li><li>id选择器和类选择器最大的不同在于使用次数上</li><li>类选择器在修改样式中用的最多，id选择器一般用于页面唯一性的元素上，经常和JavaScript搭配使用</li></ol><h4 id="通配符选择器"><a href="#通配符选择器" class="headerlink" title="通配符选择器"></a>通配符选择器</h4><p>在CSS中，通配符选择器使用*定义，他表示选取页面中所有元素（标签）</p><p>通配符选择器不需要调用，自动就给所有的元素使用样式</p><p>特殊情况才使用</p><h4 id="基础选择器总结"><a href="#基础选择器总结" class="headerlink" title="基础选择器总结"></a>基础选择器总结</h4><table><thead><tr><th>基础选择器</th><th>作用</th><th>特点</th><th>使用情况</th></tr></thead><tbody><tr><td>标签选择器</td><td>可以选出所有相同的标签</td><td>不能差异化选择</td><td>较多</td></tr><tr><td>类选择器</td><td>可以选出一个或者多个标签</td><td>可以看根据需求选择</td><td>非常多</td></tr><tr><td>id选择器</td><td>一次只能选择一个标签</td><td>id属性只能在每个HTML文档中出现一次</td><td>一般和js搭配</td></tr><tr><td>通配符选择器</td><td>选择所有的标签</td><td>选择的太多，有部分不需要</td><td>特殊情况使用</td></tr></tbody></table><ul><li>每个基础选择器都有使用场景，都需要掌握</li><li>如果是修改样式，类选择器是使用最多的</li></ul><h3 id="CSS字体属性"><a href="#CSS字体属性" class="headerlink" title="CSS字体属性"></a>CSS字体属性</h3><p>CSS Fonts（字体）属性用于定义字体系列，大小，粗细和文字样式（如斜体）</p><h4 id="字体系列"><a href="#字体系列" class="headerlink" title="字体系列"></a>字体系列</h4><p>CSS使用font-family属性定义文本的字体系列</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;微软雅黑&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：</p><ol><li>各种字体之间必须使用英文状态下的逗号隔开</li><li>一般情况下，如果又空格隔开的多个单词组成的字体，加引号</li><li>尽量使用系统默认自带字体，保证在任何用户的浏览器中都能正确显示</li><li>最常见的几个字体：‘Mircosoft YaHei’，tahoma，arial，’Hiragino Sans GB’</li></ol><h4 id="字体大小"><a href="#字体大小" class="headerlink" title="字体大小"></a>字体大小</h4><p>CSS使用font-size属性定义字体大小</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：</p><ol><li>像素（px）大小是我们网页的最常用单位</li><li>谷歌浏览器默认的文字大小为16px</li><li>不同浏览器默认字体大小不同，我们尽量给一个明确的值，不要默认大小</li><li>可以给body指定整个页面文字的大小</li><li>标题标签比较特殊，需要单独指定文字大小</li></ol><h4 id="字体粗细"><a href="#字体粗细" class="headerlink" title="字体粗细"></a>字体粗细</h4><p>CSS使用font-weight属性设置文本字体的粗细</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">font-weight</span>: </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>normal</td><td>默认值（不加粗）</td></tr><tr><td>bold</td><td>定义粗体（加粗的）</td></tr><tr><td>100~900（后面不跟单位）</td><td>400等同于normal，而700等同于bold</td></tr></tbody></table><p><strong>注意</strong>：</p><ol><li>实际开发中，更提倡使用数字表示字体粗细</li></ol><h4 id="文字样式"><a href="#文字样式" class="headerlink" title="文字样式"></a>文字样式</h4><p>CSS使用font-style属性设置文本的风格</p><table><thead><tr><th>属性值</th><th>作用</th></tr></thead><tbody><tr><td>normal</td><td>默认值，浏览器会显示标准的字体样式</td></tr><tr><td>italic</td><td>浏览器会显示斜体的字体样式</td></tr></tbody></table><p><strong>注意</strong>：</p><ol><li>平实我们很少给文字加斜体，反而要把斜体标签改成不倾斜字体</li></ol><h4 id="复合属性"><a href="#复合属性" class="headerlink" title="复合属性"></a>复合属性</h4><p>字体属性可以把以上文字样式综合来写，这样可以更节约代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line"><span class="attribute">font</span>: font-style font-weight font-size/line-height font-family</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：</p><ol><li>使用font属性时，必须按上面语法格式中的顺序书写，不能更换顺序，并且各个属性之间以空格隔开</li><li>不需要设置的属性可以省略（取默认值），但必须保留font-size和font-family属性，否则font属性将不起作用</li></ol><h4 id="字体属性总结"><a href="#字体属性总结" class="headerlink" title="字体属性总结"></a>字体属性总结</h4><table><thead><tr><th>属性</th><th>表示</th><th>注意点</th></tr></thead><tbody><tr><td>font-size</td><td>字号</td><td>我们通常用的单位是px像素，注意跟上单位</td></tr><tr><td>font-family</td><td>字体</td><td>实际工作中按照团队约定来写字体</td></tr><tr><td>font-weight</td><td>字体粗细</td><td>加粗是700或者bold，不加粗是normal或者400，后面没有单位</td></tr><tr><td>font-style</td><td>字体样式</td><td>倾斜是italic，不倾斜是normal，常用normal</td></tr><tr><td>font</td><td>字体连写</td><td>有固定顺序，不能随意换位置，字号和字体必须给定</td></tr></tbody></table><h3 id="CSS文本属性"><a href="#CSS文本属性" class="headerlink" title="CSS文本属性"></a>CSS文本属性</h3><p>CSSText（文本）属性可定义文本的外观，比如文本的颜色，对其文本，装饰文本，文本缩进，行间距等</p><h4 id="文本颜色"><a href="#文本颜色" class="headerlink" title="文本颜色"></a>文本颜色</h4><p>color属性用于定义文本的颜色</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>表示</th><th>属性</th></tr></thead><tbody><tr><td>预定义的颜色值</td><td>red，green，blue等</td></tr><tr><td>十六进制</td><td>#FF0000，#后面跟6个16进制数</td></tr><tr><td>RGB代码</td><td>rgb(255,0,0)或者rgb(100%,0%,0%)</td></tr></tbody></table><p><strong>注意</strong>：</p><ol><li>开发中最常用的是十六进制</li></ol><h4 id="文本对齐"><a href="#文本对齐" class="headerlink" title="文本对齐"></a>文本对齐</h4><p>text-align属性用于设置元素内文本内容的水平对齐方式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>left</td><td>左对齐（默认值）</td></tr><tr><td>right</td><td>右对齐</td></tr><tr><td>center</td><td>居中对齐</td></tr></tbody></table><h4 id="文本装饰"><a href="#文本装饰" class="headerlink" title="文本装饰"></a>文本装饰</h4><p>text-decoration属性规定添加到文本的修饰，可以给文本添加下划线，删除线，上划线</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">text-decoration</span>: underline;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>none</td><td>默认，没有装饰线（最常用）</td></tr><tr><td>underline</td><td>下划线，a标签自带下划线（常用）</td></tr><tr><td>overline</td><td>上划线（几乎不用）</td></tr><tr><td>line-through</td><td>删除线（不常用）</td></tr></tbody></table><h4 id="文本缩进"><a href="#文本缩进" class="headerlink" title="文本缩进"></a>文本缩进</h4><p>text-indent属性用来指定文本第一行的缩进，通常是将段落的首行缩进</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">text-indent</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过该长度，所有元素的第一行都可以缩进一个给定的长度，甚至该长度可以是负值</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">text-indent</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>em是一个相对单位，就是当前元素1个文字的大小（font-size），如果当前元素没有设置大小，则会按照父元素的1个文字大小</p><h4 id="行间距"><a href="#行间距" class="headerlink" title="行间距"></a>行间距</h4><p>line-height属性用于设置行间的距离（行高），可以控制文字行与行之间的距离</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="文本属性总结"><a href="#文本属性总结" class="headerlink" title="文本属性总结"></a>文本属性总结</h4><table><thead><tr><th>属性</th><th>表示</th><th>注意点</th></tr></thead><tbody><tr><td>color</td><td>文本颜色</td><td>通常使用十六进制</td></tr><tr><td>text-align</td><td>文本对齐</td><td>可以设定文字水平的对齐方式</td></tr><tr><td>text-indent</td><td>文本缩进</td><td>通常用于段落首行缩进两个字的距离</td></tr><tr><td>text-decoration</td><td>文本修饰</td><td>添加下划线underline，取消下划线none</td></tr><tr><td>line-height</td><td>行高</td><td>控制行与行之间的距离</td></tr></tbody></table><h3 id="CSS引入方式"><a href="#CSS引入方式" class="headerlink" title="CSS引入方式"></a>CSS引入方式</h3><p>按照CSS样式书写的位置（或者引入的方式），CSS样式表可以分为三大类：</p><ol><li>行内样式表</li><li>内部样式表</li><li>外部样式表</li></ol><h4 id="行内样式表（行内式）"><a href="#行内样式表（行内式）" class="headerlink" title="行内样式表（行内式）"></a>行内样式表（行内式）</h4><p>行内样式表实在元素标签内部的style属性中设定CSS样式，适合于修改简单样式</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;color:red;&quot;&gt;青春不常在，抓紧谈恋爱&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：</p><ol><li>style其实就是标签的属性</li><li>在双引号中间，写法要符合CSS规范</li><li>可以控制当前标签设置样式</li></ol><h4 id="内部样式表（嵌入式）"><a href="#内部样式表（嵌入式）" class="headerlink" title="内部样式表（嵌入式）"></a>内部样式表（嵌入式）</h4><p>内部样式表是写道html页面内部，是将所有CSS代码抽取出来，单独放到一个style标签</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    <span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">30px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：</p><ol><li>style标签理论上可以放在HTML文档的任何地方，但一般会放在文档的head标签中</li><li>通过此种方式，可以方便控制当前整个页面中的元素样式设置</li><li>代码结构清晰，但是并没有实现结构与样式完全分离</li><li>使用内部样式表设定CSS，通常也被称为嵌入式引入，这种方式是我们练习时常用的方式</li></ol><h4 id="外部样式表（链接式）"><a href="#外部样式表（链接式）" class="headerlink" title="外部样式表（链接式）"></a>外部样式表（链接式）</h4><p>实际开发都是外部样式表，适合于样式比较多的情况，核心是：样式单独写到CSS文件中，之后把CSS文件也纳入到HTML页面中使用</p><p>引入外部样式表分为两步：</p><ol><li>新建一个后缀名为.css的样式文件，把所有CSS代码都放入此文件中</li><li>在HTML页面中，使用link标签引入这个文件</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;css文件路径&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>作用</th></tr></thead><tbody><tr><td>rel</td><td>定义当前文档与被链接文档之间的关系，在这里需要指定为stylesheet，表示被链接的文档是一个样式表文件</td></tr><tr><td>href</td><td>定义所链接外部样式包文件的URL，可以是相对路径，也可以是绝对路径</td></tr></tbody></table><p><strong>注意</strong>：</p><ol><li>使用外部样式表设定CSS，通常也被称为外链式或链接式引入，这二种方式是开发中常用的方式</li></ol><h4 id="CSS引入方式总结"><a href="#CSS引入方式总结" class="headerlink" title="CSS引入方式总结"></a>CSS引入方式总结</h4><table><thead><tr><th>样式表</th><th>优点</th><th>缺点</th><th>使用情况</th><th>控制范围</th></tr></thead><tbody><tr><td>行内样式表</td><td>书写方便</td><td>结构样式混写</td><td>较少</td><td>控制一个标签</td></tr><tr><td>内部样式表</td><td>部分结构和样式相分离</td><td>没有彻底分离</td><td>较多</td><td>控制一个页面</td></tr><tr><td>外部样式表</td><td>完全实现结构和样式相分离</td><td>需要引入</td><td>最多</td><td>控制多个页面</td></tr></tbody></table><h3 id="chrome调试工具"><a href="#chrome调试工具" class="headerlink" title="chrome调试工具"></a>chrome调试工具</h3><p> chrome浏览器提供了一个非常好用的调试工具，可以用来调试我们的HTML结构和CSS样式</p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><ul><li>ctrl + 滚轮可以放大开发者工具代码大小</li><li>左边是HTML元素结构，右边是CSS样式</li><li>右边CSS样式可以改动数值（左右箭头或者直接输入）和查看颜色</li><li>ctrl + 0复原浏览器大小</li><li>如果点击元素，发现右侧没有样式引入，极有可能是类名或者样式引入错误</li><li>如果点击元素，发现右侧没有样式引入，既有可能是类名或者样式引入错误</li><li>如果有央视，但是样式前面有黄色叹号提示，则是样式属性书写错误</li></ul><h3 id="Emmet语法"><a href="#Emmet语法" class="headerlink" title="Emmet语法"></a>Emmet语法</h3><p>Emmet语法的前身是Zen coding，它使用缩写，来提高html/css的编写速度，Vscode内部已经集成改语法</p><h4 id="HTML结构语法"><a href="#HTML结构语法" class="headerlink" title="HTML结构语法"></a>HTML结构语法</h4><ol><li>生成标签直接输入标签名按tab键即可</li><li>如果想要生成多个相同标签，加上 * 就可以了</li><li>如果有父子级关系的标签，可以用 &gt;</li><li>如果有兄弟关系的标签，可以用 +</li><li>如果生成带有类名或者id名的，直接.demo或者#two加tab</li><li>如果生成的标签类名或者id名是有顺序的，可以用自增符号$</li><li>如果想要在生成的标签内部些内容可以用{}表示</li></ol><h4 id="CSS样式语法"><a href="#CSS样式语法" class="headerlink" title="CSS样式语法"></a>CSS样式语法</h4><p>Emmet支持通过首字母快速生成CSS样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.one</span> &#123;</span><br><span class="line">    <span class="comment">/* tac + tab */</span></span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">text-indent</span>: <span class="number">2em</span>;</span><br><span class="line">    <span class="comment">/* w100 + tab */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="comment">/* h100 + tab */</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="comment">/* tdn + tab */</span></span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="快速格式化代码"><a href="#快速格式化代码" class="headerlink" title="快速格式化代码"></a>快速格式化代码</h4><p>Vscode快速格式化代码：shift + alt + f</p><p>也可以设置当我们保存页面的时候自动格式化代码：</p><ol><li>文件 –&gt; 首选项 –&gt;设置</li><li>搜索emmet.include</li><li>在setting.json下的用户中添加以下语句</li></ol><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;editor.formatOnType&quot;:true,</span><br><span class="line">&quot;editor.formatOnSave&quot;:true,</span><br></pre></td></tr></table></figure><h3 id="CSS的复合选择器"><a href="#CSS的复合选择器" class="headerlink" title="CSS的复合选择器"></a>CSS的复合选择器</h3><p>在CSS中，可以根据选择器的类型把选择器分为基础选择器和复合选择器，复合选择器是建立在基础选择器之上，对基本选择器进行组合形成。</p><ul><li>复合选择器可以更准确，更高效的选择目标元素（标签）</li><li>复合选择器是由两个或多个基础选择器，通过不同的方式组合而成</li><li>常用的复合选择器包括：后代选择器，子选择器，并集选择器，伪类选择器等等</li></ul><h4 id="后代选择器（重要）"><a href="#后代选择器（重要）" class="headerlink" title="后代选择器（重要）"></a>后代选择器（重要）</h4><p>后代选择器又称为包含选择器，可与选择父元素里面子元素，其写法就是把外层标签写在前面，内层标签写在后面，中间用空格分隔。当标签发生嵌套时，内层标签就成为外层标签的后代</p><p><strong>语法</strong>：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">父元素 子元素 &#123;样式声明&#125;</span><br></pre></td></tr></table></figure><p><strong>语义</strong>：表示选择父元素里的所有子元素</p><p><strong>例如</strong>：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ol</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：</p><ul><li>父元素与子元素之间用空格隔开</li><li>最终选择的是子元素</li><li>子元素可以是父元素的子元素，也可以是父元素的子元素的子元素等，只要包含在父元素中</li><li>父元素和子元素都可以是任意基础选择器</li></ul><h4 id="子选择器（重要）"><a href="#子选择器（重要）" class="headerlink" title="子选择器（重要）"></a>子选择器（重要）</h4><p>子元素选择器（子选择器）只能选择作为某元素的最近以及子元素，简单理解就是亲儿子元素</p><p> <strong>语法</strong> ：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">父元素 &gt; 子元素 &#123;样式声明&#125;</span><br></pre></td></tr></table></figure><p><strong>语义</strong>：表示选择父元素里面所有的直接后代子元素</p><p><strong>例如</strong>：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.nav</span> &gt; <span class="selector-tag">a</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：</p><ul><li>父元素和子元素之间用大于号隔开</li><li>最终选择的是子元素</li><li>子元素必须是父元素的最近一级</li></ul><h4 id="并集选择器（重要）"><a href="#并集选择器（重要）" class="headerlink" title="并集选择器（重要）"></a>并集选择器（重要）</h4><p>并集选择器可以选择多组标签，同时为他们定义相同的样式，通常用于集体声明</p><p>并集选择器是各选择器通过英文逗号（,）链接而成，任何形式的选择器都可以作为并集选择器的一部分</p><p><strong>语法</strong>：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素<span class="number">1</span> , 元素<span class="number">2</span> &#123;样式声明&#125;</span><br></pre></td></tr></table></figure><p><strong>语义</strong>：表示选择元素1和元素2</p><p><strong>例如</strong>：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>,</span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line"><span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：</p><ul><li>元素1和元素2中间用逗号隔开</li><li>逗号可以理解为和的意思</li><li>并集选择器通常用于集体声明</li><li>爷爷都不敢的语法规范，我们并集选择器喜欢竖着写，最后一个选择器不需要加逗号</li></ul><h4 id="伪类选择器"><a href="#伪类选择器" class="headerlink" title="伪类选择器"></a>伪类选择器</h4><p>伪类选择器用于向某些选择器添加特殊的效果，比如给链接添加特殊效果，或选择第一个，第n个元素</p><p> 伪类选择器书写最大的特点使用冒号（:）表示</p><p>因为伪类选择器很多，比如有链接伪类，结构伪类等</p><h5 id="链接伪类选择器"><a href="#链接伪类选择器" class="headerlink" title="链接伪类选择器"></a>链接伪类选择器</h5><table><thead><tr><th>选择器</th><th>描述</th></tr></thead><tbody><tr><td>:link</td><td>未被访问的链接</td></tr><tr><td>:visited</td><td>已访问过的链接</td></tr><tr><td>:hover</td><td>鼠标悬停的链接</td></tr><tr><td>:active</td><td>鼠标点击的链接（未弹起前）</td></tr></tbody></table><p><strong>注意</strong>：</p><ol><li>为了确保生效，请按照<strong>LVHA</strong>的顺序声明</li><li>因为a链接在浏览器中具有默认样式，所以我们实际工作中都需要给链接单独指定样式</li><li>实际开发中一般只需要给链接指定一个样式，再给鼠标经过指定一个样式</li></ol><h5 id="focus伪类选择器"><a href="#focus伪类选择器" class="headerlink" title=":focus伪类选择器"></a>:focus伪类选择器</h5><p>:focus伪类选择器用于选取获得焦点的表单元素</p><p>焦点就是光标，一般情况input类表单元素才能获取，因此这个选择器也主要针对于表单元素来说</p><h4 id="复合"><a href="#复合" class="headerlink" title="复合"></a>复合</h4><h4 id="选择器总结"><a href="#选择器总结" class="headerlink" title="选择器总结"></a>选择器总结</h4><table><thead><tr><th>选择器</th><th>作用</th><th>特征</th><th>使用情况</th><th>隔开符号及用法</th></tr></thead><tbody><tr><td>后代选择器</td><td>用来选择后代元素</td><td>可以是子孙后代</td><td>较多</td><td>空格</td></tr><tr><td>子代选择器</td><td>选择最近一级元素</td><td>只选儿子</td><td>较少</td><td>大于</td></tr><tr><td>并集选择器</td><td>选择某些相同样式的元素</td><td>可以用于集体声明</td><td>较多</td><td>逗号，</td></tr><tr><td>链接伪类选择器</td><td>选择不同状态的链接</td><td>跟链接相关</td><td>较多</td><td>:hover<br />:link<br />:active<br />:visited</td></tr><tr><td>:focus选择器</td><td>选择获得光标的表单</td><td>跟表单相关</td><td>较少</td><td>:focus</td></tr></tbody></table><h3 id="CSS元素显示模式"><a href="#CSS元素显示模式" class="headerlink" title="CSS元素显示模式"></a>CSS元素显示模式</h3><p>作用：网页的标签非常多，在不同的地方会用到不同类型的标签，了解他们的特点可以更好的布局我们的网页 </p><p>元素显示模式就是元素（标签）以什么方式进行显示，比如div自己占一行，多个span可以放在一行</p><p>HTML元素一般分为块元素和行内元素两种类型</p><h4 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h4><p>常见的块元素有h1~h6,div,ul,ol,li等，其中div是最典型的块元素</p><p><strong>特点</strong>：</p><ol><li>比较霸道，独占一行</li><li>高度，宽度外边距以及内边距都可以控制</li><li>宽度默认是容器（父级宽度）的100%</li><li>是一个容器及盒子，里面可以放行内或者块级元素</li></ol><p><strong>注意</strong>：</p><ol><li>文字类的元素内不能使用块级元素</li><li>p标签主要用于存放文字，因此p里面不能放块级元素，特别是不能放div</li></ol><h4 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h4><p> 常见的行内元素有a，strong，b，em，i，del，s，ins，u，span等，其中span是最典型的行内元素，有的地方也将行内元素称为内联元素</p><p><strong>特点</strong>：</p><ol><li>相邻行内元素在一行上，一行可以显示多个</li><li>高宽直接设置是无效的</li><li>默认宽度就是它本身内容的宽度</li><li>行内元素只能容纳文本或者其他行内元素</li></ol><p><strong>注意</strong>：</p><ol><li>链接里不能在放链接</li><li>特殊情况a里面可以放块级元素，但是把a转换成块级元素最安全</li></ol><h4 id="行内块元素"><a href="#行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h4><p>在行内元素中有几个特殊的标签，img，input，td，他们同时具有块元素和行内元素的特点，有些资料称他们为行内块元素。</p><p><strong>特点</strong>：</p><ol><li>和相邻内元素（行内块）在一行上，但是他们之间会有空白缝隙。一行可以显示多个（行内元素特点）</li><li>默认宽度就是它本身的宽度（行内元素特点）</li><li>高度，行高，外边距以及内边距都可以控制（块级元素特点）</li></ol><h4 id="元素显示模式总结"><a href="#元素显示模式总结" class="headerlink" title="元素显示模式总结"></a>元素显示模式总结</h4><table><thead><tr><th>元素模式</th><th>元素排列</th><th>设置样式</th><th>默认宽度</th><th>包含</th></tr></thead><tbody><tr><td>块级元素</td><td>一行只能放一个</td><td>可以设置宽度高度</td><td>容器的100%</td><td>可以包含任何标签</td></tr><tr><td>行内元素</td><td>一行可以放多个</td><td>不可以直接设置宽度高度</td><td>它本身内容的宽度</td><td>容纳文本或其他很内元素</td></tr><tr><td>行内块元素</td><td>一行可以放多个</td><td>可以设置宽度和高度</td><td>它本身内容的宽度</td><td></td></tr></tbody></table><h4 id="元素显示模式转换"><a href="#元素显示模式转换" class="headerlink" title="元素显示模式转换"></a>元素显示模式转换</h4><p>特殊情况下，我们需要元素模式的转换，简单理解：一个模式的 元素需要另外一种模式的特性</p><p>比如想要增加链接a的触发范围</p><p>转换为块元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>转换为行内元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: inline; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>转换为行内块元素</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">span</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="当行文字垂直居中"><a href="#当行文字垂直居中" class="headerlink" title="当行文字垂直居中"></a>当行文字垂直居中</h4><p>CSS没有给我们提供文字垂直居中的代码，我们可以让文字的行高等于盒子的高度，就可以让文字在当前盒子内垂直居中</p><p>原理</p><p><img src="https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/20211117202052.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV14J4114768?p=1&amp;amp;spm_id_from=pageDriver&quot;&gt;https://www.bilibili.com/video/BV14J4114768?p=1&amp;amp;</summary>
      
    
    
    
    
    <category term="前端" scheme="http://example.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript</title>
    <link href="http://example.com/2021/05/18/JavaScript/"/>
    <id>http://example.com/2021/05/18/JavaScript/</id>
    <published>2021-05-18T11:54:30.000Z</published>
    <updated>2021-06-17T07:56:00.765Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><p>参考视频：<a href="https://www.bilibili.com/video/BV1JJ41177di">https://www.bilibili.com/video/BV1JJ41177di</a></p><h1 id="什么是JavaScript"><a href="#什么是JavaScript" class="headerlink" title="什么是JavaScript"></a>什么是JavaScript</h1><p>JavaScript是一门世界上最流行的脚本语言</p><p><strong>一个合格的后端人员，必须要精通JavaScript</strong></p><h2 id="ECMAScript"><a href="#ECMAScript" class="headerlink" title="ECMAScript"></a>ECMAScript</h2><p>它往往被称为<a href="https://baike.baidu.com/item/JavaScript">JavaScript</a>或<a href="https://baike.baidu.com/item/JScript">JScript</a>，所以它可以理解为是JavaScript的一个标准,但实际上后两者是ECMA-262标准的实现和扩展。、</p><p>最新版本已经到es6版本，但是大部分浏览器还只停留在支持es5代码上</p><p>开发环境和线上环境，版本不一致</p><h1 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h1><h2 id="引入JavaScript"><a href="#引入JavaScript" class="headerlink" title="引入JavaScript"></a>引入JavaScript</h2><h3 id="内部标签"><a href="#内部标签" class="headerlink" title="内部标签"></a>内部标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--script之中，写JavaScript代码--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">alert(<span class="string">&#x27;Hello World&#x27;</span>);</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="外部引入"><a href="#外部引入" class="headerlink" title="外部引入"></a>外部引入</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注意：script必须成对出现，不能使用自闭和 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/qj.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="基本语法入门"><a href="#基本语法入门" class="headerlink" title="基本语法入门"></a>基本语法入门</h2><p>javascript大小写严格敏感</p><h3 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h3><p>var 变量名 = 变量值 不需要指定变量类型</p><p>变量名标识符规则和Java相同</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> score = <span class="number">65</span>;</span><br></pre></td></tr></table></figure><h3 id="条件控制"><a href="#条件控制" class="headerlink" title="条件控制"></a>条件控制</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (score &gt; <span class="number">60</span> &amp;&amp; score &lt; <span class="number">70</span>) &#123;</span><br><span class="line">       alert(<span class="string">&quot;60~70&quot;</span>);</span><br><span class="line">   &#125; <span class="keyword">else</span> <span class="keyword">if</span> (score &gt; <span class="number">70</span> &amp;&amp; score &lt; <span class="number">80</span>) &#123;</span><br><span class="line">       alert(<span class="string">&quot;70~80&quot;</span>);</span><br><span class="line">   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">       alert(<span class="string">&quot;other&quot;</span>);</span><br><span class="line">   &#125; </span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>数值，文本，图形，音频，视频……</p><h3 id="number"><a href="#number" class="headerlink" title="number"></a>number</h3><p>js不区分小数和整数，统一为Number</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">123</span> <span class="comment">//整数123</span></span><br><span class="line"><span class="number">123.1</span> <span class="comment">//浮点数123.1</span></span><br><span class="line"><span class="number">1.123e3</span> <span class="comment">//科学技术法</span></span><br><span class="line">-<span class="number">99</span> <span class="comment">//负数</span></span><br><span class="line"><span class="literal">NaN</span> <span class="comment">//not a number</span></span><br><span class="line"><span class="literal">Infinity</span> <span class="comment">//数值过大，表示无限大</span></span><br></pre></td></tr></table></figure><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>‘asd’，“asd”</p><h3 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h3><p>true， false</p><h3 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&amp;&amp; 两个都为真</span><br><span class="line">|| 一真一假</span><br><span class="line">！ 真变假，假变真</span><br></pre></td></tr></table></figure><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">=     赋值</span><br><span class="line">==    等于（类型不同，值相同，也会判断为<span class="literal">true</span>）</span><br><span class="line">===   绝对等于（类型相同，值相同，才判为<span class="literal">true</span>）</span><br></pre></td></tr></table></figure><p>这是JS的一个缺陷，坚持不要使用 == 做比较</p><p>须知：</p><ul><li>NaN不等于NaN，NaN与所有的数值都不想等，包括自己</li><li>只能通过isNaN(number)来判断这个数是否是NaN</li></ul><h3 id="浮点数问题"><a href="#浮点数问题" class="headerlink" title="浮点数问题"></a>浮点数问题</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log((<span class="number">1</span>/<span class="number">3</span>) === (<span class="number">1</span>-<span class="number">2</span>/<span class="number">3</span>))</span><br><span class="line"><span class="comment">// 结果为false</span></span><br></pre></td></tr></table></figure><p>尽量避免使用浮点数进行运算，存在精度问题</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Math</span>.abs(<span class="number">1</span>/<span class="number">3</span>-(<span class="number">1</span>-<span class="number">2</span>/<span class="number">3</span>)) &lt; <span class="number">0.000000001</span>)</span><br><span class="line"><span class="comment">// 结果为true</span></span><br></pre></td></tr></table></figure><h3 id="null和undefined"><a href="#null和undefined" class="headerlink" title="null和undefined"></a>null和undefined</h3><ul><li>null 空</li><li>undefined 未定义</li></ul><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>Java中的数组必须是一些列相同类型的对象，JS中不需要</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="string">&quot;hello&quot;</span>,<span class="literal">null</span>,<span class="literal">true</span>]</span><br></pre></td></tr></table></figure><p>为保证代码的可读性，数组尽量使用”[]” </p><p>取数组下标，如果越界，就会显示undefined</p><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><p>对象使用{}，每个属性之间使用逗号隔开，最后一个不需要添加</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person =&#123;</span><br><span class="line">       name:<span class="string">&quot;JuuustJay&quot;</span>,</span><br><span class="line">       age: <span class="number">3</span>,</span><br><span class="line">       tags: [<span class="string">&#x27;handsome&#x27;</span>,<span class="string">&#x27;smart&#x27;</span>]</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>取对象的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">person.name</span><br><span class="line">&gt; <span class="string">&quot;JuuustJay&quot;</span></span><br><span class="line">person.age</span><br><span class="line">&gt; <span class="number">3</span></span><br><span class="line">person.tags</span><br><span class="line">&gt; <span class="built_in">Array</span> [ <span class="string">&quot;handsome&quot;</span>, <span class="string">&quot;smart&quot;</span> ]</span><br></pre></td></tr></table></figure><h2 id="严格检查模式strict"><a href="#严格检查模式strict" class="headerlink" title="严格检查模式strict"></a>严格检查模式strict</h2><p>严格检查模式，预防javascript的随意性导致产生的一些问题，必须写在Javascript的第一行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&#x27;use strict&#x27;</span>;</span><br></pre></td></tr></table></figure><p>局部变量建议都使用let定义</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>严格检查模式strict<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="meta">            &#x27;use strict&#x27;</span>;</span></span><br><span class="line"><span class="javascript">            <span class="comment">//全局变量</span></span></span><br><span class="line"><span class="javascript">            <span class="keyword">let</span> i = <span class="number">1</span>;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// ES6 let定义局部变量</span></span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="数据类型-1"><a href="#数据类型-1" class="headerlink" title="数据类型"></a>数据类型</h1><h2 id="字符串-1"><a href="#字符串-1" class="headerlink" title="字符串"></a>字符串</h2><ol><li>正常字符串使用单引号或者双引号包裹</li><li>注意转义字符 </li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">\&#x27;&#x27;</span><br><span class="line">\n换行</span><br><span class="line">\ttab</span><br><span class="line">\u4e2d  unicode字符</span><br><span class="line">\x41    ascII字符</span><br></pre></td></tr></table></figure><ol start="3"><li>多行字符串编写</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//tab上面的`（飘号键）</span></span><br><span class="line"><span class="keyword">let</span> msg = <span class="string">`</span></span><br><span class="line"><span class="string">asds</span></span><br><span class="line"><span class="string">asdwerxaw`</span></span><br></pre></td></tr></table></figure><ol start="4"><li>模板字符串</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">&quot;JuuustJay&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> age = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">let</span> msg = <span class="string">`你好呀,<span class="subst">$&#123;age&#125;</span>岁的<span class="subst">$&#123;name&#125;</span>`</span>;</span><br></pre></td></tr></table></figure><ol start="5"><li>字符串长度</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string.length</span><br></pre></td></tr></table></figure><ol start="6"><li>字符串的可变性，不可变</li><li>字符串大小写切换</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">string.toUpperCase() <span class="comment">//切换大写</span></span><br><span class="line">string.toLowerCase() <span class="comment">//切换小写</span></span><br></pre></td></tr></table></figure><h2 id="数组-1"><a href="#数组-1" class="headerlink" title="数组"></a>数组</h2><p>Array可以包含任意类型的数据类型</p><h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><h2 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h2><p>绝对值函数</p><blockquote><p>定义方式一</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">abs</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> -x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一旦执行到return代表函数结束，返回结果</p><p>如果没有执行return，函数执行完也会返回结果，结果就是undefined </p><blockquote><p>定义方式二</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> abs = <span class="function"><span class="keyword">function</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> -x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>function(x){ ….. }这是一个匿名函数。但是可以把结果赋值给变量abs，通过abs就可以获得函数的返回值</p><p>方式一和方式二等价</p><h2 id="调用函数"><a href="#调用函数" class="headerlink" title="调用函数"></a>调用函数</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abs(<span class="number">10</span>) <span class="comment">//10</span></span><br></pre></td></tr></table></figure><p>参数问题：JavaScript可以传任意个参数，也可以不传递参数</p><p>参数进来是否存在的问题</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">arguments</span>.length <span class="comment">//参数数量</span></span><br></pre></td></tr></table></figure><p>假设不存在参数，如何规避</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">abs</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//手动抛出异常来判断</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> x!==<span class="string">&#x27;number&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="string">&#x27;Not a Number&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> -x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多个参数问题</p><p><strong>arguments</strong>是一个JS免费赠送的关键词，代表传递进来的所有参数，是一个数组</p><p><strong>rest</strong>获取除了已经定义的参数之外的所有参数~…</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">aaa</span>(<span class="params">a,b,...rest</span>) </span>&#123;</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">&quot;a=&gt;&quot;</span> + a);</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">&quot;b=&gt;&quot;</span> + b);</span><br><span class="line">       <span class="built_in">console</span>.log(<span class="string">&quot;rest=&gt;&quot;</span> + rest);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>rest参数只能写在最后面，必须用…标识</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JavaScript&quot;&gt;&lt;a href=&quot;#JavaScript&quot; class=&quot;headerlink&quot; title=&quot;JavaScript&quot;&gt;&lt;/a&gt;JavaScript&lt;/h1&gt;&lt;p&gt;参考视频：&lt;a href=&quot;https://www.bilibili.com</summary>
      
    
    
    
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>LayUI</title>
    <link href="http://example.com/2021/05/13/LayUI/"/>
    <id>http://example.com/2021/05/13/LayUI/</id>
    <published>2021-05-13T09:43:05.000Z</published>
    <updated>2021-06-17T08:00:13.084Z</updated>
    
    <content type="html"><![CDATA[<h1 id="LayUI"><a href="#LayUI" class="headerlink" title="LayUI"></a>LayUI</h1><p>LayUI官网：<a href="https://www.layui.com/">https://www.layui.com/</a></p><p>参考文档：<a href="https://www.layui.com/doc/">https://www.layui.com/doc/</a></p><p>参考视频：<a href="https://www.bilibili.com/video/BV1up4y1t7QJ?from=search&amp;seid=15569455550361313412">https://www.bilibili.com/video/BV1up4y1t7QJ?from=search&amp;seid=15569455550361313412</a></p><h1 id="下载和使用"><a href="#下载和使用" class="headerlink" title="下载和使用"></a>下载和使用</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>官网首页下载</p><p>解压后目录结构如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">├─css //css目录</span><br><span class="line">│  │─modules //模块 css 目录（一般如果模块相对较大，我们会单独提取，如下：）</span><br><span class="line">│  │  ├─laydate</span><br><span class="line">│  │  └─layer</span><br><span class="line">│  └─layui.css //核心样式文件</span><br><span class="line">├─font  //字体图标目录</span><br><span class="line">└─layui.js //核心库</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p><strong>将解压后的文件夹复制到所创建的项目当中</strong></p><p><strong>引用layui.css以及layui.js</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- LayUI的核心CSS文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;layui-v2.6.6/layui/css/layui.css&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- LayUI的核心JS文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;layui-v2.6.6/layui/layui.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="页面元素"><a href="#页面元素" class="headerlink" title="页面元素"></a>页面元素</h1><h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><h3 id="布局容器"><a href="#布局容器" class="headerlink" title="布局容器"></a>布局容器</h3><ul><li><strong>固定宽度</strong><ul><li>两侧有留白</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-container&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: cadetblue;height: 200px;&quot;</span>&gt;</span></span><br><span class="line">    固定宽度</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>完整宽度<ul><li>占据屏幕宽度的100%</li></ul></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-fluid&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: red;height: 200px;&quot;</span>&gt;</span></span><br><span class="line">    完整宽度</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="栅格系统"><a href="#栅格系统" class="headerlink" title="栅格系统"></a>栅格系统</h3><p>为了丰富网页布局，简化 HTML/CSS 代码的耦合，并提升多终端的适配能力，layui 在 2.0  的版本中引进了自己的一套具备响应式能力的栅格系统。将容器进行了 12 等分，预设了 4*12 种 CSS  排列类，它们在移动设备、平板、桌面中/大尺寸四种不同的屏幕下发挥着各自的作用</p><p><strong>栅格布局规则</strong></p><ol><li><p>采用layui-row来定义行</p></li><li><p>采用类似layui-col-md*这样的预设类来定义一组列（column），且放在（row）内。其中：</p><ul><li>变量md表示的不同屏幕下的标记</li><li>变量*表示的是该列所占用的12等分数（*/12），可选值（1 - 12）</li><li>如果多个列的“等分数值”总和等于12，则刚好满行排列，如果大于12则另起一行</li></ul></li><li><p>列可以同时出现最多四种不同的组合，分别是xs，sm，md，lg</p></li><li><p>可以在列（column）元素中放入你自己的任意元素填充内容</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 定义布局容器 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-container&quot;</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 定义行 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-row&quot;</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- 定义列 --&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-col-md5&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #3F3F3F;height: 50px;&quot;</span>&gt;</span></span><br><span class="line">               内容5/12</span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-col-md7&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #6F6F6F;height: 50px;&quot;</span>&gt;</span></span><br><span class="line">               内容7/12</span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-row&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 50px;&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-col-md4&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color:orangered;height: 50px;&quot;</span>&gt;</span></span><br><span class="line">               内容4/12</span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-col-md4&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color:red;height: 50px;&quot;</span>&gt;</span></span><br><span class="line">               内容4/12</span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-col-md5&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color:darkred;height: 50px;&quot;</span>&gt;</span></span><br><span class="line">               内容5/12</span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>响应式规则</strong></p><p>栅格的响应式能力，得益于CSS3媒体查询的强力支持，从而针对四类不同尺寸（width）屏幕，进行响应的适配处理</p><ul><li>xs：( 0 , 768 ) px<ul><li>layui-container：auto</li><li>始终按照设定的比例水平排列</li></ul></li><li>sm：[ 768 , 992 ) px<ul><li> layui-container：750px</li><li>在当前屏幕下水平排列，如果屏幕大小低于临界值则堆叠排列</li></ul></li><li>md：[ 992 , 1200 ) px<ul><li>layui-container：970px</li><li>在当前屏幕下水平排列，如果屏幕大小低于临界值则堆叠排列</li></ul></li><li>lg：[ 1200 , ∞) px<ul><li>layui-container：1170px</li><li>在当前屏幕下水平排列，如果屏幕大小低于临界值则堆叠排列</li></ul></li></ul><p><strong>列边距</strong></p><p>可对列追加类似layui-col-space5这样的预设类来定义列边距</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-container&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">h3</span>&gt;</span>列边距<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-row layui-col-space10&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-col-md4&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-color: pink;&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-col-md4&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-color: red;&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-col-md4&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background-color: purple;&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>layui-col-space：设置后不起作用主要是因为设置的是padding，也就是说向内缩，所以为layui-col设置背景色也会为内缩部分添加背景色，可以在col里加一个div达到目的</li><li>间距一般不超过30px，如果超过30px，建议使用列偏移</li></ol><p><strong>列偏移</strong></p><p>对列追加类似layui-col-md-offset*这样的预设类来定义列偏移，使列向右偏移，*表示列偏移的列数，可选范围为1~12</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-container&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>列偏移<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-row&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-col-md4&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #0000FF;&quot;</span>&gt;</span></span><br><span class="line">未偏移4/12</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-col-md4 layui-col-md-offset4&quot;</span> <span class="attr">style</span>=<span class="string">&quot;background-color: #00F7DE;&quot;</span>&gt;</span></span><br><span class="line">偏移4/12</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>列嵌套</strong></p><p>可以对栅格系统进行无穷层次的嵌套，在列元素的中插入行元素，即可完成嵌套</p><h2 id="基本元素"><a href="#基本元素" class="headerlink" title="基本元素"></a>基本元素</h2><h3 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h3><p>向任意HTML元素设定class=“layui-btn”，建立一个基础按钮</p><p>通过追加格式为“layui-btn-{type}”的class来定义其他按钮风格</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 基础按钮 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn&quot;</span>&gt;</span>标准按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://layui.com&quot;</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn&quot;</span>&gt;</span>跳转按钮<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn&quot;</span>&gt;</span>一个按钮<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>基础按钮</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>基础按钮<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn&quot;</span>&gt;</span>标准按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://layui.com&quot;</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn&quot;</span>&gt;</span>跳转按钮<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn&quot;</span>&gt;</span>一个按钮<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>按钮主题</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>不同主题的按钮<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-primary&quot;</span>&gt;</span>原始按钮<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn&quot;</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-normal&quot;</span>&gt;</span>百搭<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-warm&quot;</span>&gt;</span>暖色<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-danger&quot;</span>&gt;</span>警告<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-disabled&quot;</span>&gt;</span>禁用<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>按钮尺寸</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>不同尺寸的按钮<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-lg&quot;</span>&gt;</span>大型<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn&quot;</span>&gt;</span>默认<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-sm&quot;</span>&gt;</span>小型<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn-xs&quot;</span>&gt;</span>迷你<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>按钮圆角</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>圆角按钮<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;blayui-btn layui-btn-radius&quot;</span>&gt;</span>默认按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;blayui-btn layui-btn-primary layui-btn-radius&quot;</span>&gt;</span>原始按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-normal layui-btn-radius&quot;</span>&gt;</span>百搭按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-warm layui-btn-radius&quot;</span>&gt;</span>暖色按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn layui-btn-danger layui-btn-radius&quot;</span>&gt;</span>警告按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;blayui-btn blayui-btn-disabled layui-btn-radius&quot;</span>&gt;</span>禁用按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>按钮图标</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>图标按钮<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;layui-icon&quot;</span>&gt;</span><span class="symbol">&amp;#xe608;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 添加</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;layui-icon&quot;</span>&gt;</span><span class="symbol">&amp;#x1002;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 刷新</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;layui-btn&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;layui-icon layui-icon-heart&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> 关注</span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/20210514190633.png" style="width:100%;" /><h2 id="导航"><a href="#导航" class="headerlink" title="导航"></a>导航</h2><p>导航一般指页面引导性频道集合，多以菜单的形式呈现，可应用与头部和侧边，面包屑结构简单，支持自定义分隔符。</p><p>依赖加载模块：element</p><p>实现步骤：</p><ol><li>引入资源<ul><li>需要引入核心js文件以及核心css文件</li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;layui/css/layui.css&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;layui/layui.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>依赖加载模块</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span></span><br><span class="line"><span class="javascript">       layui.use(<span class="string">&#x27;element&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">           <span class="keyword">var</span> element = layui.element;</span></span><br><span class="line">       &#125;);</span><br><span class="line">   <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>显示指定类型的导航</li></ol><h3 id="水平导航"><a href="#水平导航" class="headerlink" title="水平导航"></a>水平导航</h3><ul><li>layui-nav：表示的是一个水平导航</li><li>layui-nav-item：表示导航项</li><li>layui-this：表示当前被选中的项</li><li>layui-nav-child：表示的是二级菜单</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item layui-this&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>最新活动<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>产品<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>大数据<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>解决方案<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-child&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>移动模块<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>后台模块<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>电商平台<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="垂直导航"><a href="#垂直导航" class="headerlink" title="垂直导航"></a>垂直导航</h3><ul><li>layui-nav layui-nav-tree：表示的是一个垂直导航</li><li>垂直导航不会占满整个侧边</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>垂直导航<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav layui-nav-tree&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item layui-this&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>最新活动<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>产品<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>大数据<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>解决方案<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-child&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>移动模块<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>后台模块<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>电商平台<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="侧边导航"><a href="#侧边导航" class="headerlink" title="侧边导航"></a>侧边导航</h3><ul><li>layui-nav layui-nav-tree  layui-nav-side：表示的是一个侧边导航</li><li>侧边导航会占满整个侧边，效果更和谐</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>侧边导航<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav layui-nav-tree layui-nav-side&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item layui-this&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>最新活动<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>产品<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>大数据<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-item&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>解决方案<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">dl</span> <span class="attr">class</span>=<span class="string">&quot;layui-nav-child&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">dd</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>移动模块<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>后台模块<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>电商平台<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="导航主题"><a href="#导航主题" class="headerlink" title="导航主题"></a>导航主题</h3><p>通过对导航追加CSS背景类，让导航呈现不同的主题色</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;LayUI&quot;&gt;&lt;a href=&quot;#LayUI&quot; class=&quot;headerlink&quot; title=&quot;LayUI&quot;&gt;&lt;/a&gt;LayUI&lt;/h1&gt;&lt;p&gt;LayUI官网：&lt;a href=&quot;https://www.layui.com/&quot;&gt;https://www.layui</summary>
      
    
    
    
    
    <category term="LayUI" scheme="http://example.com/tags/LayUI/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis</title>
    <link href="http://example.com/2021/04/20/MyBatis/"/>
    <id>http://example.com/2021/04/20/MyBatis/</id>
    <published>2021-04-20T06:25:30.000Z</published>
    <updated>2021-09-18T08:41:13.063Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MyBatis"><a href="#MyBatis" class="headerlink" title="MyBatis"></a>MyBatis</h1><p>参考教程：<a href="https://www.bilibili.com/video/BV1NE411Q7Nx">https://www.bilibili.com/video/BV1NE411Q7Nx</a></p><p>狂神官网：<a href="https://www.kuangstudy.com/course">https://www.kuangstudy.com/course</a></p><p>环境：</p><ul><li>JDK1.8</li><li>mySql 8.0.23</li><li>Maven 3.6.1</li><li>IDEA  </li></ul><p>SSM框架；所有框架都是有配置文件，最好的学习方式就是看官网文档</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><h2 id="什么是Mybatis"><a href="#什么是Mybatis" class="headerlink" title="什么是Mybatis"></a>什么是Mybatis</h2><ul><li>MyBatis 是一款优秀的<strong>持久层框架</strong>。</li><li>免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作。MyBatis可以通过简单的 XML 或注解来配置和映射原始类型、接口和 Java POJO（Plain Old  Java Objects，普通老式 Java 对象）为数据库中的记录。</li></ul><p>如何获取Mybatis</p><ul><li>maven仓库：<a href="https://mvnrepository.com/artifact/org.mybatis/mybatis">https://mvnrepository.com/artifact/org.mybatis/mybatis</a></li><li>github：<a href="https://github.com/mybatis/mybatis-3">https://github.com/mybatis/mybatis-3</a></li><li>中文文档：<a href="https://mybatis.org/mybatis-3/zh/index.html">https://mybatis.org/mybatis-3/zh/index.html</a></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h3><ul><li>持久化就是将程序的数据在持久状态和顺势状态转化的过程</li><li>内存：断电即失</li><li>数据库(jdbc)，io文件</li></ul><p><strong>为什么需要持久化</strong></p><ul><li>有一些对象，不能让他丢掉</li><li>内存成本高</li></ul><h3 id="持久层"><a href="#持久层" class="headerlink" title="持久层"></a>持久层</h3><ul><li>完成持久化工作的代码块</li><li>层界限试分明显</li></ul><p>1.4、为什么需要Mybatis</p><ul><li>方便</li><li>传统的JDBC代码过于复杂</li><li>优点<ul><li>简单易学：本身就很小且简单。没有任何第三方依赖，最简单安装只要两个jar文件+配置几个sql映射文件易于学习，易于使用，通过文档和源代码，可以比较完全的掌握它的设计思路和实现。</li><li>灵活：mybatis不会对应用程序或者数据库的现有设计强加任何影响。 sql写在xml里，便于统一管理和优化。通过sql语句可以满足操作数据库的所有需求。</li><li>解除sql与程序代码的耦合：通过提供DAO层，将业务逻辑和数据访问逻辑分离，使系统的设计更清晰，更易维护，更易单元测试。sql和代码的分离，提高了可维护性。</li><li>提供映射标签，支持对象与数据库的orm字段关系映射</li><li>提供对象关系映射标签，支持对象关系组建维护</li><li>提供xml标签，支持编写动态sql</li></ul></li></ul><p>最重要的一点：使用人多</p><h1 id="第一个Mybatis程序"><a href="#第一个Mybatis程序" class="headerlink" title="第一个Mybatis程序"></a>第一个Mybatis程序</h1><p>思路：搭建环境–&gt;导入Mybatis–&gt;编写代码–&gt;测试</p><h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><p>搭建数据库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create table user(id int(20) auto_increment,name varchar(30),pwd varchar(30),primary key(id))engine&#x3D;innodb default charset&#x3D;utf8;</span><br><span class="line">insert into user(name,pwd) values (&#39;张杰&#39;,&#39;123456&#39;),(&#39;张杰1&#39;,&#39;123456&#39;),(&#39;张杰2&#39;,&#39;123456&#39;);</span><br></pre></td></tr></table></figure><p>创建项目</p><ol><li>新建一个普通的maven项目</li><li>删除src目录，将项目定义为父工程</li><li>导入依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--mysql驱动--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.23<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="创建一个模块"><a href="#创建一个模块" class="headerlink" title="创建一个模块"></a>创建一个模块</h2><ul><li>编写mybatis的核心配置文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--核心配置文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC<span class="symbol">&amp;amp;</span>userSSL=false<span class="symbol">&amp;amp;</span>characterEncoding=UTF-8&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jb767823&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>编写mybatis的工具类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> user.juuustjay.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//第一步：获取sqlSessionFactory对象</span></span><br><span class="line">            String resource = <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">            InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">            sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//既然有了SqlSessionFactory，顾名思义，我们可以从中获得SqlSession的实例了</span></span><br><span class="line">    <span class="comment">//SqlSession完全包含了面向数据库执行Sql命令的所有方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSqlSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h2><ul><li>实体类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> user.juuustjay.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(<span class="keyword">int</span> id, String name, String pwd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPwd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPwd</span><span class="params">(String pwd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>Dao接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">     <span class="function">List&lt;User&gt; <span class="title">getUserList</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>接口实现类由原来的UserDaoImpl变成一个Mapper配置文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--namespace命名空间绑定一个对应的mapper接口--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;user.juuustjay.dao.UserDao&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--select查询语句--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user.juuustjay.pojo.User&quot;</span>&gt;</span></span><br><span class="line">        select * from mybatis.user</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>注意点：</p><ol><li>org.apache.ibatis.binding.BindingException: Type interface user.juuustjay.dao.UserDao is not known to the MapperRegistry.<ul><li>需要在Mybatis核心配置文件中注册</li></ul></li><li>java.lang.ExceptionInInitializerError</li></ol><h1 id="CRUD"><a href="#CRUD" class="headerlink" title="CRUD"></a>CRUD</h1><h2 id="namespace"><a href="#namespace" class="headerlink" title="namespace"></a>namespace</h2><p>namespace中的包名要和Dao/mapper接口的包名一致</p><h2 id="select"><a href="#select" class="headerlink" title="select"></a>select</h2><p>查询语句</p><ul><li>id：对应的namespace中的方法名</li><li>resultType：Sql语句执行的返回值</li><li>parameterType：参数类型</li></ul><ol><li>编写接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询全部用户</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getUserList</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//根据ID查询用户</span></span><br><span class="line"><span class="function">User <span class="title">getUserById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>编写对应的mapper中的sql语句</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--查询全部用户--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user.juuustjay.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.user;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--根据ID查询用户--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user.juuustjay.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    select * from user where id = #&#123;id&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserList</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line"></span><br><span class="line">    List&lt;User&gt; userList = sqlSession.selectList(<span class="string">&quot;user.juuustjay.dao.UserDao.getUserList&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line"></span><br><span class="line">    UserDao mapper = sqlSession.getMapper(UserDao.class);</span><br><span class="line">    User user = mapper.getUserById(<span class="number">2</span>);</span><br><span class="line">    System.out.println(user);</span><br><span class="line"></span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="insert"><a href="#insert" class="headerlink" title="insert"></a>insert</h2><h2 id="update"><a href="#update" class="headerlink" title="update"></a>update</h2><h2 id="delete"><a href="#delete" class="headerlink" title="delete"></a>delete</h2><p>注意点：</p><ul><li>需要提交事物</li></ul><h2 id="map"><a href="#map" class="headerlink" title="map"></a>map</h2><p>假如，我们的实体类或者数据库中的表，字段或者参数过多，应当考虑使用map，但是不正规</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//万能map</span></span><br><span class="line"><span class="function">User <span class="title">addUser2</span><span class="params">(Map&lt;String,Object&gt; map)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser2&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">    insert into user (id,name,pwd) values (#&#123;id&#125;,#&#123;name&#125;,#&#123;pwd&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">       UserDao mapper = sqlSession.getMapper(UserDao.class);</span><br><span class="line">       Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;String,Object&gt;();</span><br><span class="line">       map.put(<span class="string">&quot;id&quot;</span>,<span class="number">6</span>);</span><br><span class="line">       map.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;张杰6&quot;</span>);</span><br><span class="line">       map.put(<span class="string">&quot;pwd&quot;</span>,<span class="string">&quot;123456&quot;</span>);</span><br><span class="line">       sqlSession.commit();</span><br><span class="line">       sqlSession.close();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>Map传递参数，直接在sql中取出key即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser2&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>对象传递参数，直接在sql中取对象的属性即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser2&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Object&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>只有一个基本类型参数的情况下，可以直接在sql中取到</p><p>多个参数用Map，或者用注解</p><h2 id="模糊查询"><a href="#模糊查询" class="headerlink" title="模糊查询"></a>模糊查询</h2><ol><li>Java代码执行的时候，传递通配符% %</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; userList = mapper.getUserLike(<span class="string">&quot;%张%&quot;</span>);</span><br></pre></td></tr></table></figure><ol start="2"><li>在sql拼接中使用通配符</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserLike&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user.juuustjay.pojo.User&quot;</span>&gt;</span></span><br><span class="line">       select * from user where name Like &quot;%&quot;#&#123;name&#125;&quot;%&quot; ;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="配置解析"><a href="#配置解析" class="headerlink" title="配置解析"></a>配置解析</h1><h2 id="核心配置文件"><a href="#核心配置文件" class="headerlink" title="核心配置文件"></a>核心配置文件</h2><ul><li>mybatis-config.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">properties（属性）</span><br><span class="line">settings（设置）</span><br><span class="line">typeAliases（类型别名）</span><br><span class="line">typeHandlers（类型处理器）</span><br><span class="line">objectFactory（对象工厂）</span><br><span class="line">plugins（插件）</span><br><span class="line">environments（环境配置）</span><br><span class="line">environment（环境变量）</span><br><span class="line">transactionManager（事务管理器）</span><br><span class="line">dataSource（数据源）</span><br><span class="line">databaseIdProvider（数据库厂商标识）</span><br><span class="line">mappers（映射器）</span><br></pre></td></tr></table></figure><h2 id="环境配置（environments）"><a href="#环境配置（environments）" class="headerlink" title="环境配置（environments）"></a>环境配置（environments）</h2><p>Mybatis可以配置成适应多种环境</p><p><strong>不过要记住：尽管可以配置多个环境，但每个SqlSessionFactory实例只能选择一种环境</strong></p><p>学会使用配置多套运行环境</p><p>Mybatis默认的事务管理器是JDBC，连接池是POOLED</p><h2 id="属性（Properties）"><a href="#属性（Properties）" class="headerlink" title="属性（Properties）"></a>属性（Properties）</h2><p>我们可以通过properties属性来实现引用配置文件</p><p>这些属性都是可外部配置且可动态替换的，既可以在典型的Java属性文件中配置，也可以通过properties元素的子元素来传递</p><p>编写一个配置文件</p><p>db.propertties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306?serverTimezone=UTC&amp;useSSL=false&amp;characterEncoding=UTF-8</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">jb767823</span></span><br></pre></td></tr></table></figure><p>在核心配置文件中映入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--引入外部配置文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;db.properties&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123456&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>可以直接引入外部文件</li><li>可以在其中增加一些属性配置</li><li>如果两个文件有同一个字段，优先使用外部配置文件的</li></ul><h2 id="类型别名"><a href="#类型别名" class="headerlink" title="类型别名"></a>类型别名</h2><p>类型别名是为Java设定一个短的名字，存在的意义仅在于减少类完全限定名的冗余</p><ol><li>可以直接给实体类起别名</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;user.juuustjay.pojo.User&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;User&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也可以指定一个包名，Mybatis会在包名下面搜索需要的Java Bean，比如：</p><ol start="2"><li>扫描实体类的包，他的默认别名就为这个类的类名，首字母小写，如果有注解，则别名为注解名</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;user.juuustjay.pojo&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果实体类比较少的时候，使用第一种方式</p><p>如果实体类比较多的时候，使用第二方式</p><p>第一种可以自定义别名，第二种需要添加注解</p><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>这是Mybatis及其重要的调整设置，他们会改变Mybatis的运行时行为。</p><img src="https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/1620711844(1).jpg" style="width:100%;" /><img src="https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/1620711930(1).jpg" style="width:100%;" /><h2 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h2><ul><li>typeHandlers（类型处理器）</li><li>objectFactory（对象工厂）</li><li>plugins插件<ul><li>mybatis-generator-core</li><li>mybatis-plus</li><li>通用mapper</li></ul></li></ul><h2 id="mapper映射"><a href="#mapper映射" class="headerlink" title="mapper映射"></a>mapper映射</h2><p>MapperRegistry：注册绑定我们的Mapper文件</p><p>方式一：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置文件放在resources文件夹下，名字和对应的接口相同--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>方式二：使用class文件绑定</p><p>注意点：</p><ul><li>接口和他的Mapper配置文件必须同名</li><li>接口和他的Mapper配置文件必须在同一个包下</li></ul><p>方式三：选择包package</p><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><img src="https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/20210511153606.png" style="width:100%;" /><p>生命周期和作用域是至关重要的，因为错误的使用会导致非常严重的并发问题</p><p><strong>SqlSessionFactoryBuilder：</strong></p><ul><li>一旦创建了SqlSessionFactory之后，就不再需要了</li><li>局部变量</li></ul><p><strong>SqlSessionFactory：</strong></p><ul><li>可以想象为：数据库连接池</li><li>一旦创建之后一直存在，没有任何理由丢弃或者重新创建一个新的实例</li><li>最简单的就是使用<strong>单例模式</strong>或者<strong>静态单例模式</strong></li></ul><p><strong>SqlSession：</strong></p><ul><li>连接到数据库的一个请求</li><li>SqlSession的实例不是线程安全的，因此是不能被共享的，所以他的最佳的作用域是请求或者方法作用域</li><li>用完之后需要赶紧关闭，否则资源被占用</li></ul><img src="https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/20210511154710.png" style="width:100%;" /><h1 id="解决属性名和字段名不一致的问题"><a href="#解决属性名和字段名不一致的问题" class="headerlink" title="解决属性名和字段名不一致的问题"></a>解决属性名和字段名不一致的问题</h1><p>数据库中的字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">id int(20) auto_increment</span><br><span class="line">name varchar(30)</span><br><span class="line">pwd varchar(30)</span><br></pre></td></tr></table></figure><p>pojo中的User</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">   <span class="keyword">private</span> String name;</span><br><span class="line">   <span class="keyword">private</span> String password;</span><br></pre></td></tr></table></figure><p>查询结果显示</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">User&#123;id=<span class="number">1</span>, name=<span class="string">&#x27;张杰1&#x27;</span>, password=<span class="string">&#x27;null&#x27;</span>&#125;</span><br><span class="line">User&#123;id=<span class="number">2</span>, name=<span class="string">&#x27;张杰2&#x27;</span>, password=<span class="string">&#x27;null&#x27;</span>&#125;</span><br><span class="line">User&#123;id=<span class="number">3</span>, name=<span class="string">&#x27;张杰3&#x27;</span>, password=<span class="string">&#x27;null&#x27;</span>&#125;</span><br><span class="line">User&#123;id=<span class="number">4</span>, name=<span class="string">&#x27;张杰4&#x27;</span>, password=<span class="string">&#x27;null&#x27;</span>&#125;</span><br><span class="line">User&#123;id=<span class="number">5</span>, name=<span class="string">&#x27;张杰5&#x27;</span>, password=<span class="string">&#x27;null&#x27;</span>&#125;</span><br><span class="line">User&#123;id=<span class="number">6</span>, name=<span class="string">&#x27;张杰6&#x27;</span>, password=<span class="string">&#x27;null&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><p>解决方法：</p><ul><li>起别名</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">       select id,name,pwd as password from user;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>resultMap</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--column数据库中的字段，property实体类中的属性--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;UserMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserList&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;UserMap&quot;</span>&gt;</span></span><br><span class="line">       select * from user;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>resultMap元素是MyBatis中最重要最强大的元素</li><li>resultMap的设计思想是，对于简单的语句根本不需要配置显式的结果映射，而对于复杂一点的语句只需要描述他们的关系就行了</li><li>resultMap最优秀的地方在于，虽然你已经对他相当了解了，但是根本就不需要显式地使用</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;MyBatis&quot;&gt;&lt;a href=&quot;#MyBatis&quot; class=&quot;headerlink&quot; title=&quot;MyBatis&quot;&gt;&lt;/a&gt;MyBatis&lt;/h1&gt;&lt;p&gt;参考教程：&lt;a href=&quot;https://www.bilibili.com/video/BV1NE</summary>
      
    
    
    
    
    <category term="MyBatis" scheme="http://example.com/tags/MyBatis/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb</title>
    <link href="http://example.com/2021/04/19/JavaWeb/"/>
    <id>http://example.com/2021/04/19/JavaWeb/</id>
    <published>2021-04-19T11:53:48.000Z</published>
    <updated>2021-11-12T11:21:15.070Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaWeb"><a href="#JavaWeb" class="headerlink" title="JavaWeb"></a>JavaWeb</h1><h1 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>web开发：</p><ul><li>web,网页</li><li>静态web<ul><li>html,css</li><li>提供给所有人看的数据始终不会发生变化</li></ul></li><li>动态web<ul><li>淘宝，几乎所有网站</li><li>会发生变化，不同的人在不同时间不同地点看到的信息各不相同</li><li>技术栈：Servlet/JSP，ASP，PHP</li></ul></li></ul><p>在Java中，动态web资源开发的技术统称为JavaWeb</p><h2 id="web应用程序"><a href="#web应用程序" class="headerlink" title="web应用程序"></a>web应用程序</h2><p>web应用程序 ：可以提供浏览器访问的程序</p><ul><li>a.html、b.html等多个web资源，这些web资源可以被外界访问，对外界提供服务</li><li>能访问到的任何一个页面或者资源，都存在于这个世界的某一个角落的计算机上</li><li>URL：统一资源定位符</li><li>这些统一的web资源会被放在同一个文件夹下，web应用程序–&gt;Tomcat服务器</li><li>一个web应用由多部份组成（静态web，动态web）<ul><li>html，css，js</li><li>jsp，servlet</li><li>java程序</li><li>jar包</li><li>配置文件（Properties）</li></ul></li></ul><p>web应用程序编写完毕后，想要提供给外界访问：需要一个服务器来统一管理</p><h2 id="静态web"><a href="#静态web" class="headerlink" title="静态web"></a>静态web</h2><ul><li>.htm,.html都是网页的后缀，如果服务器上一直存在这些东西，我们就可以直接进行读取访问</li></ul><img src="https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/JavaWeb_2.jpg" style="width:75%;height:40%;"/><ul><li>静态web存在的缺点<ul><li>Web页面无法动态更新，所有用户看到的都是同一个页面<ul><li>轮播图，点击特效实现伪动态</li><li>JavaScript（实际开发中应用最多）</li><li>VBScript</li></ul></li><li>无法与数据交互（数据无法持久化，用户无法交互）</li></ul></li></ul><h2 id="动态web"><a href="#动态web" class="headerlink" title="动态web"></a>动态web</h2><p>页面会动态展示，展示效果因人而异</p><img src="https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/JavaWeb_3.jpg" style="width:100%;" /><ul><li>缺点<ul><li>加入服务器的动态web资源出现了错误，我们需要重新编写我们的后台程序，重新发布（网站的停机维护）</li></ul></li></ul><img src="https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/JavaWeb_4.jpg" style="width:100%;" /><ul><li>Web页面可以动态更新，不同用户看到不同页面</li><li>可以与数据库交互（数据持久化：注册，商品信息，用户信息等）</li></ul><h1 id="web服务器"><a href="#web服务器" class="headerlink" title="web服务器"></a>web服务器</h1><h2 id="技术讲解"><a href="#技术讲解" class="headerlink" title="技术讲解"></a>技术讲解</h2><p>ASP</p><ul><li>微软：国内最早流行的web服务器</li><li>在HTML中嵌入了VB的脚本，ASP+COM</li><li>在ASP开发中，基本一个页面都有几千行的业务代码，页面乱</li><li>代码多而杂，维护成本高</li><li>C##</li><li>IIS</li></ul><p><strong>PHP:</strong></p><ul><li>PHP开发速度很快，功能很强大，跨平台，代码很简单（中国网站70%轻型，WP）</li><li>无法承载大访问量（局限性）</li></ul><p><strong>JSP/Servlet：</strong></p><p>B/S：浏览器（Browser）/服务器（Service）</p><p>C/S：客户端（Browser）/服务器（Service）</p><ul><li>sun公司主推的B/S架构</li><li>基于Java语言</li><li>可以承载三高问题带来的影响（高可用高并发高性能）</li><li>语法类似ASP降低学习成本，加强市场的占有</li></ul><h2 id="web服务器-1"><a href="#web服务器-1" class="headerlink" title="web服务器"></a>web服务器</h2><p>服务器是一种被动的操作，用来处理用户的一些请求给用户一些响应信息</p><p><strong>IIS</strong></p><ul><li>微软，ASP</li></ul><p><strong>Tomcat</strong></p><ul><li><p>Tomcat是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目，最新的Servlet 和JSP 规范总是能在Tomcat  中得到体现。因为Tomcat  技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web 应用服务器。</p><p>Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用<a href="https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8">服务器</a>，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。对于一个Java初学Web来说，是最佳的选择。</p><p>Tomcat 实际上运行JSP 页面和Servlet，目前Tomcat最新版本为9.0.41<strong>。</strong></p></li><li><p>工作三到五年之后，可以尝试手写Tomcat服务器</p></li><li><p>下载tomcat：</p><ul><li>安装或者解压</li><li>了解配置文件及目录结构</li><li>这个东西的作用</li></ul></li></ul><h1 id="Tomcat"><a href="#Tomcat" class="headerlink" title="Tomcat"></a>Tomcat</h1><p>官网：<a href="https://tomcat.apache.org/">https://tomcat.apache.org/</a></p><h2 id="Tomcat的启动和配置"><a href="#Tomcat的启动和配置" class="headerlink" title="Tomcat的启动和配置"></a>Tomcat的启动和配置</h2><ul><li>启动： startup.bat</li><li>关闭：shutdown.bat</li><li>可能遇到的问题<ul><li>java环境变量没有配置好</li><li>闪退问题：需要配置兼容性</li><li>乱码问题：设置配置文件</li></ul></li></ul><img src="https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/JavaWeb_5.jpg" style="width:100%;" /><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>conf文件夹下的server.xml</p><ul><li>可以配置启动的端口号，默认端口号：8080</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">               <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>可以配置启动的名称，默认的主机名：localhost-&gt;127.0.0.1，默认网站应用存放的位置为webapps</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">&quot;localhost&quot;</span>  <span class="attr">appBase</span>=<span class="string">&quot;webapps&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">unpackWARs</span>=<span class="string">&quot;true&quot;</span> <span class="attr">autoDeploy</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="高难度面试题"><a href="#高难度面试题" class="headerlink" title="高难度面试题"></a>高难度面试题</h2><p>请你谈谈网站是如何进行访问的：</p><ol><li>输入域名</li><li>检查本机C:\Windows\System32\drivers\etc\hosts配置文件下有没有这个域名映射<ol><li>有：直接返回对应的ip地址，这个地址中，有我们需要访问的web程序，可以直接访 问</li><li>没有：去DNS服务器上寻找，找到就返回，没有找到就报错</li></ol></li></ol><img src="https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/JavaWeb_6.jpg" style="wdith:100%;" /><h1 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h1><h2 id="什么是HTTP"><a href="#什么是HTTP" class="headerlink" title="什么是HTTP"></a>什么是HTTP</h2><p><strong>什么是HTTP</strong></p><p>超文本传输协议，是互联网上应用最为广泛的一种网络协议。用于定义客户端浏览器和服务器之间交换数据的过程</p><p><strong>为什么学习HTTP</strong></p><ul><li>HTTP协议是JavaWeb开发的基础，每一个请求和响应是web开发的最基本的操作</li></ul><h2 id="HTTP的作用和特点"><a href="#HTTP的作用和特点" class="headerlink" title="HTTP的作用和特点"></a>HTTP的作用和特点</h2><p><strong>作用：</strong></p><p>可以使浏览器和服务器之间更高效的传输数据，他不仅保证计算机正确快速地传输超文本文档，还能确定文档中的拿一部分，以及哪部分内容首先显示</p><p><strong>特点：</strong></p><p>基于请求响应模型，先有请求后有响应</p><h2 id="HTTP协议的组成"><a href="#HTTP协议的组成" class="headerlink" title="HTTP协议的组成"></a>HTTP协议的组成</h2><p><strong>请求协议</strong></p><ul><li>请求行</li><li>请求头</li><li>请求体</li></ul><p><strong>响应协议</strong></p><ul><li>响应行</li><li>响应头</li><li>响应体</li></ul><h2 id="HTTP请求"><a href="#HTTP请求" class="headerlink" title="HTTP请求"></a>HTTP请求</h2><p><strong>什么是HTTP请求</strong></p><p>客户端连上服务器后，向服务器请求某个web资源，称之为客户端向服务器发送了一个HTTP请求</p><h3 id="请求行"><a href="#请求行" class="headerlink" title="请求行"></a><strong>请求行</strong></h3><p>包含了HTTP的请求方式，请求资源名称以及HTTP版本</p><p>POST/post.html HTTP/1.1</p><p><strong>请求方式</strong></p><ul><li>GET<ul><li>GET请求查询的参数可以在浏览器地址中显示</li><li>请求的数据会附加在URL之后，以？分割URL和传输的数据，多个参数用&amp;链接</li><li>没有请求体</li></ul></li><li>POST<ul><li>POST请求会把请求的数据放置在HTTP请求体中</li></ul></li><li>DELETE</li><li>PUT</li></ul><p><strong>使用场景</strong></p><ul><li>GET请求通常用于查询操作</li><li>POST请求通常用于提交数据操作</li></ul><h3 id="请求头"><a href="#请求头" class="headerlink" title="请求头"></a>请求头</h3><p>请求头用于描述客户端请求哪台主机，以及客户端的一些环境信息，以键值对方式传递数据</p><h3 id="请求体"><a href="#请求体" class="headerlink" title="请求体"></a><strong>请求体</strong></h3><p>代表着浏览器在POST请求方式中传递给服务器的参数，每一个数据都是使用键值对形式，多个值用&amp;链接</p><h1 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h1><h2 id="为什么学习maven"><a href="#为什么学习maven" class="headerlink" title="为什么学习maven"></a>为什么学习maven</h2><ul><li>在java开发中需要使用大量的jar包，maven可以帮助我们导入和配置jar包</li></ul><h2 id="Maven项目架构管理工具"><a href="#Maven项目架构管理工具" class="headerlink" title="Maven项目架构管理工具"></a>Maven项目架构管理工具</h2><p>用以导入jar包</p><p>Maven的核心思想：<strong>约定大于配置</strong></p><ul><li>有约束，不要去违反</li></ul><p>Maven会规定好你如何去编写我们Java代码，必须按照这个规范来</p><h2 id="Maven的下载安装"><a href="#Maven的下载安装" class="headerlink" title="Maven的下载安装"></a>Maven的下载安装</h2><p>官网：<a href="https://maven.apache.org/">https://maven.apache.org/</a></p><p>下载地址：<a href="https://maven.apache.org/download.cgi">https://maven.apache.org/download.cgi</a></p><p>下载完成直接解压</p><h2 id="Maven环境变量的配置"><a href="#Maven环境变量的配置" class="headerlink" title="Maven环境变量的配置"></a>Maven环境变量的配置</h2><p>在我们的系统环境变量中</p><p>配置如下配置：</p><ul><li>M2_HOME        maven目录下的bin目录</li><li>MAVEN_HOME    maven的目录</li><li>在系统的path中配置MAVEN_HOME     %MAVEN_HOME%\bin</li><li>cmd中运行mvn -version检测环境变量是否配置成功，成功会正常显示maven版本</li></ul><h2 id="阿里云镜像"><a href="#阿里云镜像" class="headerlink" title="阿里云镜像"></a>阿里云镜像</h2><ul><li>镜像：mirrows，加速我们的下载</li><li>国内建议使用阿里云镜像</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*,!jeecg,!jeecg-snapshots<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus aliyun<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="本地仓库"><a href="#本地仓库" class="headerlink" title="本地仓库"></a>本地仓库</h2><p>在本地的仓库，远程仓库</p><p>建立一个仓库：localRepository</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>D:\apache-maven-3.6.1\maven-repo<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="在IDEA使用MAVEN"><a href="#在IDEA使用MAVEN" class="headerlink" title="在IDEA使用MAVEN"></a>在IDEA使用MAVEN</h2><ol><li>启动IDEA</li><li>创建一个maven项目</li></ol><img src="https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/JavaWeb_7.jpg" style="width:100;" /><ol start="3"><li>等待项目初始化</li><li>出现BUILD SUCCESS即项目构建成功</li><li>IDEA中的Maven设置<ul><li>IDEA项目创建成功之后，看一眼项目配置</li></ul></li><li>到这里，maven在IDEA中的配置和使用就ok了</li></ol><p>4.8、创建一个普通的Maven项目</p><p>即不勾选<strong>Create from archetype</strong>，会生成一个干净的Maven项目</p><h2 id="标记文件夹功能"><a href="#标记文件夹功能" class="headerlink" title="标记文件夹功能"></a>标记文件夹功能</h2><p>右键文件夹Mark Directory as</p><p>java文件夹选择Sources root</p><p>resources选择Resources root</p><h2 id="pom文件"><a href="#pom文件" class="headerlink" title="pom文件"></a>pom文件</h2><p>pom.xml是maven的核心配置文件</p><img src="https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/JavaWeb_8.jpg" style="width:100%;" /><p>maven可以在dependencies中添加具体依赖的jar包配置文件</p><p>maven的高级之处在于，他会帮你导入这个jar包的所依赖的其他jar </p><p>maven由于约定大于配置， 我们之后可能会遇到我们写的配置文件，无法导出或者生效的问题，解决方案：</p><ul><li>在build中配置resources，来防止我们资源导出失败的问题</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在build中配置resources，来防止我们资源导出失败 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="IDEA操作"><a href="#IDEA操作" class="headerlink" title="IDEA操作"></a>IDEA操作</h2><p>ctrl+shift+alt+U可以生成maven的目录树</p><img src="https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/JaveWeb_9.jpg" style="width:100%;" /><h1 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h1><h2 id="什么是JSP"><a href="#什么是JSP" class="headerlink" title="什么是JSP"></a>什么是JSP</h2><p>Java Server Page：Java服务器端页面，也和Servlet一样，用于动态Web技术</p><p>最大的特点：</p><ul><li>写JSP就像在写HTML</li></ul><p>与HTML的区别：</p><ul><li>HTML只给用户提供静态的数据</li><li>JSP页面中可以嵌入JAVA代码，为用户提供动态数据</li></ul><h2 id="JSP原理"><a href="#JSP原理" class="headerlink" title="JSP原理"></a>JSP原理</h2><p>思路：JSP到底怎么执行的</p><ul><li><p>代码层面没有问题</p></li><li><p>服务器内部工作</p><ul><li>tomcat中有一个work目录</li><li>work目录每次重启tomcat都会重新创建</li><li>在IDEA中使用tomcat会在IDEA的tomcat工作空间</li><li>JSP最终会转变为JAVA程序</li></ul></li><li><p>浏览器向服务器发送请求，不管访问什么资源，其实都只是访问Servlet </p></li><li><p>JSP继承HTTPJSPBase,HTTPJSPBase继承HTTPServlet,本质就是一个Servlet</p></li><li><p>我们写的JSP代码会被out.write(“”)手动转换</p>   <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">_jspInit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//销毁</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">_jspDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//JSPService</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">_jspService</span><span class="params">(<span class="keyword">final</span> javax.servlet.http.HttpServletRequest request, <span class="keyword">final</span> javax.servlet.http.HttpServletResponse response)</span></span></span><br></pre></td></tr></table></figure></li></ul><ol><li>判断请求</li><li>生成内置对象</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> javax.servlet.jsp.PageContext pageContext; <span class="comment">//页面上下文</span></span><br><span class="line">javax.servlet.http.HttpSession session = <span class="keyword">null</span>;   <span class="comment">//session</span></span><br><span class="line"><span class="keyword">final</span> javax.servlet.ServletContext application;  <span class="comment">//applicationContext</span></span><br><span class="line"><span class="keyword">final</span> javax.servlet.ServletConfig config;     <span class="comment">//config</span></span><br><span class="line">javax.servlet.jsp.JspWriter out = <span class="keyword">null</span>;          <span class="comment">//out</span></span><br><span class="line"><span class="keyword">final</span> java.lang.Object page = <span class="keyword">this</span>;              <span class="comment">//page:当前</span></span><br><span class="line">javax.servlet.jsp.JspWriter _jspx_out = <span class="keyword">null</span>;</span><br><span class="line">javax.servlet.jsp.PageContext _jspx_page_context = <span class="keyword">null</span>;</span><br><span class="line">HttpServletRequest request                       <span class="comment">//请求</span></span><br><span class="line">HttpServletResponse response                     <span class="comment">//响应</span></span><br></pre></td></tr></table></figure><ol start="3"><li>输出页面前增加的代码</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">response.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);  <span class="comment">//设置响应的页面类型</span></span><br><span class="line">pageContext = _jspxFactory.getPageContext(<span class="keyword">this</span>, request,response,<span class="keyword">null</span>, <span class="keyword">true</span>, <span class="number">8192</span>, <span class="keyword">true</span>);</span><br><span class="line">_jspx_page_context = pageContext;</span><br><span class="line">application = pageContext.getServletContext();</span><br><span class="line">config = pageContext.getServletConfig();</span><br><span class="line">session = pageContext.getSession();</span><br><span class="line">out = pageContext.getOut();</span><br><span class="line">_jspx_out = out;</span><br></pre></td></tr></table></figure><ol start="4"><li>以上的这些对象我们可以在JSP页面中直接使用</li><li> 用户访问服务器资源的流程</li></ol><img src="https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/JavaWeb_10.jpg" style="width:100%;" /><ol start="6"><li>在JSP页面中，只要是Java代码，就会原封不动的输出，如果是HTML代码就会被转换成out.write(“”)，以这样的格式输出到前端</li></ol><h2 id="JSP基础语法"><a href="#JSP基础语法" class="headerlink" title="JSP基础语法"></a>JSP基础语法</h2><p>任何语言都有自己的语法，Java中有，JSP作为Java技术的一种以用，它拥有一些自己扩充的语法（了解知道即可），以及支持所有Java语法</p><p><strong>JSP表达式</strong></p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  JSP表达式</span><br><span class="line">  作用：用来将程序的输出，输出到客户端</span><br><span class="line">  &lt;%= 变量或者表达式 %&gt;</span><br><span class="line"> --%&gt;</span><br><span class="line">&lt;%= <span class="keyword">new</span> java.util.Date() %&gt;</span><br></pre></td></tr></table></figure><p><strong>jsp脚本片段</strong> </p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--jsp脚本片段--%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;= <span class="number">100</span>;i++) &#123;</span><br><span class="line">        sum+=i;</span><br><span class="line">    &#125;</span><br><span class="line">    out.println(<span class="string">&quot;&lt;h1&gt;Sum=&quot;</span> + sum + <span class="string">&quot;&lt;/h1&gt;&quot;</span>);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p><strong>脚本片段的再实现</strong></p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">int</span> x= <span class="number">10</span>;</span><br><span class="line">    out.println(x);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;p&gt;这是一个JSP文档&lt;/p&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    out.println(x);</span><br><span class="line">%&gt;</span><br><span class="line"></span><br><span class="line">    &lt;hr&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--在代码中嵌入HTML元素--%&gt;</span><br><span class="line"></span><br><span class="line">&lt;%</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; <span class="number">5</span>;i++) &#123;</span><br><span class="line">%&gt;</span><br><span class="line">    &lt;h1&gt;Hello,World &lt;%=i%&gt;&lt;/h1&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p><strong>JSP声明</strong></p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Loading Servlet&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">int</span> globalVar = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;wuhu&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>JSP声明，会被编译到JSP生成的Java类中，其他的会被生成到_jspService方法中</p><p>JSP的注释，不会在客户端中显示，HTML的注释会显示</p><h2 id="JSP指令"><a href="#JSP指令" class="headerlink" title="JSP指令"></a>JSP指令</h2><p>JSP三大指令</p><ul><li>Page<ul><li>根据不同的属性，指定整个页面特性</li><li>格式：&lt;%@page %&gt;</li><li>language：JSP中可以嵌入的语言种类</li><li>contentType：指定</li><li>session：是否内置session对象</li><li>import：导入Java包</li><li>errorPage：页面出错后跳转到哪个页面</li></ul></li><li>include<ul><li>页面包含指令，可以实现页面的复用</li><li>格式：&lt;%@ include file%&gt;</li></ul></li><li>taglib<ul><li>在JSP页面中引入标签库</li><li>格式：&lt;%@ tablib uri=”标签库地址” prefix=”前缀”%&gt;</li></ul></li></ul><p><strong>定制错误页面</strong></p><p>jsp方式</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> isErrorPage=<span class="string">&quot;true&quot;</span>%&gt;         指定为error页面</span><br><span class="line">&lt;%<span class="meta">@page</span> errorPage=<span class="string">&quot;error/500.jsp&quot;</span>%&gt;  指定报错界面</span><br></pre></td></tr></table></figure><p>xml方式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>404<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">location</span>&gt;</span>/error/404.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>500<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">location</span>&gt;</span>/error/500.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>页面header和footer的复用</strong></p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 静态包含 --&gt;</span><br><span class="line">&lt;%@ inlcude%&gt;  会将页面合而为一 </span><br><span class="line">&lt;!-- 动态包含 --&gt;</span><br><span class="line">&lt;jsp:inlcude/&gt; 拼接页面，本质还是三个 </span><br></pre></td></tr></table></figure><h2 id="9大内置对象"><a href="#9大内置对象" class="headerlink" title="9大内置对象"></a>9大内置对象</h2><ol><li>PageContext   存东西</li><li>Request           存东西</li><li>Response</li><li>Session            存东西</li><li>Application   (ServletContext)     存东西</li><li>config            (ServletConfig)</li><li>out</li><li>page  不用了解</li><li>exception</li></ol><img src="https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/JavaWeb_11.jpg" style="width:100%" /><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">pageContext.setAttribute(<span class="string">&quot;name1&quot;</span>,<span class="string">&quot;Zj1&quot;</span>);<span class="comment">//保存的数据只在一个页面中有效</span></span><br><span class="line">request.setAttribute(<span class="string">&quot;name2&quot;</span>,<span class="string">&quot;Zj2&quot;</span>);<span class="comment">//保存的数据只在一次请求中有效，请求转发会携带这个数据</span></span><br><span class="line">session.setAttribute(<span class="string">&quot;name3&quot;</span>,<span class="string">&quot;Zj3&quot;</span>);<span class="comment">//保存的数据只在一次会话中有效，从打开浏览器到关闭浏览器</span></span><br><span class="line">application.setAttribute(<span class="string">&quot;name4&quot;</span>,<span class="string">&quot;Zj4&quot;</span>);<span class="comment">//保存的数据只在服务器中有效，从打开服务器到关闭服务器</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    从pageContext通过寻找方式取值</span></span><br><span class="line"><span class="comment">    作用域从底层到高层</span></span><br><span class="line"><span class="comment">    find : page-&gt;request-&gt;session-&gt;application</span></span><br><span class="line"><span class="comment">    JVM：双亲委派机制</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>request：客户端向服务器发送请求，产生的数据，用户看完就没用了，比如：新闻</p><p>session：客户端向服务器发送请求，产生的数据，用户用完一会还有用，比如：购物车</p><p>application：客户端向服务器发送请求，产生的数据，一个用户用完了，其他用户还可能使用，比如：聊天数据</p><h2 id="JSP标签、JSTL标签，EL表达式"><a href="#JSP标签、JSTL标签，EL表达式" class="headerlink" title="JSP标签、JSTL标签，EL表达式"></a>JSP标签、JSTL标签，EL表达式</h2><p><strong>JSP标签</strong>：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">&lt;jsp:include&gt; 页面组合</span><br><span class="line">&lt;jsp:forward&gt; 页面跳转</span><br><span class="line">&lt;jsp:param&gt;   页面跳转携带的参数</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;jsp:include page=&quot;/common/header.jsp&quot;&gt;&lt;/jsp:include&gt;</span><br><span class="line">&lt;jsp:forward page=<span class="string">&quot;/japTag2.jsp&quot;</span>&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;name1&quot;</span> value=<span class="string">&quot;zj1&quot;</span>/&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;name2&quot;</span> value=<span class="string">&quot;zj2&quot;</span>/&gt;</span><br><span class="line">&lt;/jsp:forward&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--</span><br><span class="line">取出参数</span><br><span class="line">不能使用EL表达式</span><br><span class="line">只能使用&lt;%=%&gt;</span><br><span class="line">--%&gt;</span><br><span class="line">name1 = &lt;%=request.getParameter(<span class="string">&quot;name1&quot;</span>)%&gt;</span><br><span class="line">name2 = &lt;%=request.getParameter(<span class="string">&quot;name2&quot;</span>)%&gt;</span><br></pre></td></tr></table></figure><p><strong>JSTL标签的依赖：</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--JSTL表达式依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--standard标签依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>JSTL标签：</strong></p><p>JSTL标签库的使用就是为了弥补HTML标签的不足；自定义了许多标签，以供使用，标签的功能和Java代码一样</p><p><strong>核心标签</strong>（掌握部分）:</p><p><img src="https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/JavaWeb_12.jpg" style="width:100%" />c:if</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> &lt;c:<span class="keyword">if</span> test=<span class="string">&quot;$&#123;1==1&#125;&quot;</span> <span class="keyword">var</span>=<span class="string">&quot;isTrue&quot;</span>&gt;</span><br><span class="line">     &lt;c:out value=<span class="string">&quot;$&#123;isTrue&#125;&quot;</span>/&gt;</span><br><span class="line">&lt;/c:if&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">    test：判断语句</span><br><span class="line">    <span class="keyword">var</span>：变量存储</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>c:set,c:choose,c:when</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:set var=&quot;score&quot; value=&quot;80&quot;&gt;&lt;/c:set&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">    <span class="keyword">var</span>：变量名</span><br><span class="line">    value：变量值</span><br><span class="line">--&gt;</span><br><span class="line">&lt;c:choose&gt;</span><br><span class="line">    &lt;c:when test=<span class="string">&quot;$&#123;score&gt;=90&#125;&quot;</span>&gt;</span><br><span class="line">        你的成绩为优秀</span><br><span class="line">    &lt;/c:when&gt;</span><br><span class="line">    &lt;c:when test=<span class="string">&quot;$&#123;score&gt;=80&#125;&quot;</span>&gt;</span><br><span class="line">        你的成绩为良好</span><br><span class="line">    &lt;/c:when&gt;</span><br><span class="line">    &lt;c:when test=<span class="string">&quot;$&#123;score&gt;=70&#125;&quot;</span>&gt;</span><br><span class="line">        你的成绩为一般</span><br><span class="line">    &lt;/c:when&gt;</span><br><span class="line">    &lt;c:when test=<span class="string">&quot;$&#123;score&gt;=60&#125;&quot;</span>&gt;</span><br><span class="line">        你的成绩为及格</span><br><span class="line">    &lt;/c:when&gt;</span><br><span class="line">&lt;/c:choose&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">    test：判断条件</span><br><span class="line">    c:when：不同分支</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>c:forEach</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    ArratList&lt;String&gt; people = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    people.add(<span class="number">0</span>,<span class="string">&quot;张三&quot;</span>);</span><br><span class="line">    people.add(<span class="number">1</span>,<span class="string">&quot;李四&quot;</span>);</span><br><span class="line">    people.add(<span class="number">2</span>,<span class="string">&quot;王五&quot;</span>);</span><br><span class="line">    people.add(<span class="number">3</span>,<span class="string">&quot;赵六&quot;</span>);</span><br><span class="line">    request.setAttribute(<span class="string">&quot;list&quot;</span>,people);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;c:forEach avr=<span class="string">&quot;people&quot;</span> items=<span class="string">&quot;$&#123;list&#125;&quot;</span>&gt;</span><br><span class="line">    &lt;c:out value=&quot;$&#123;people&#125;&quot;&gt;&lt;/c:out&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line">&lt;hr&gt;</span><br><span class="line"></span><br><span class="line">&lt;c:forEach <span class="keyword">var</span>=<span class="string">&quot;people&quot;</span> item=<span class="string">&quot;$&#123;list&#125;&quot;</span> begin=<span class="string">&quot;1&quot;</span> end=<span class="string">&quot;3&quot;</span> step=<span class="string">&quot;1&quot;</span>&gt;</span><br><span class="line">    &lt;c:out value=&quot;$&#123;people&#125;&quot;&gt;&lt;/c:out&gt;</span><br><span class="line">&lt;/c:forEach&gt;</span><br><span class="line">&lt;!--</span><br><span class="line">    <span class="keyword">var</span>：每一次遍历出来的变量</span><br><span class="line">    items：要遍历的对象</span><br><span class="line">    begin：遍历的起点</span><br><span class="line">    end：遍历的终点</span><br><span class="line">    step：遍历的步长</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p><strong>JSTL标签库使用步骤：</strong></p><ul><li>引入对应的taglib</li><li>使用其中的方法</li></ul><p><strong>JSTL引入标签后项目报错：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">26-Apr-2021 15:57:27.955 涓ラ噸 [http-nio-8080-exec-7] org.apache.catalina.core.StandardWrapperValve.invoke 鍦ㄨ矾寰勪负&#x2F;clean鐨勪笂涓嬫枃涓紝Servlet[jsp]鐨凷ervlet.service锛堬級寮曞彂浜嗗叿鏈夋牴鏈師鍥犵殑寮傚父鏃犳硶鍦╳eb.xml鎴栦娇鐢ㄦ搴旂敤绋嬪簭閮ㄧ讲鐨刯ar鏂囦欢涓В鏋愮粷瀵箄ri锛歔http:&#x2F;&#x2F;java.sun.com&#x2F;jsp&#x2F;jstl&#x2F;core]</span><br><span class="line">org.apache.jasper.JasperException: 鏃犳硶鍦╳eb.xml鎴栦娇鐢ㄦ搴旂敤绋嬪簭閮ㄧ讲鐨刯ar鏂囦欢涓В鏋愮粷瀵箄ri锛歔http:&#x2F;&#x2F;java.sun.com&#x2F;jsp&#x2F;jstl&#x2F;core]</span><br><span class="line">at org.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:55)</span><br><span class="line">at org.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:294)</span><br><span class="line">at org.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:81)</span><br><span class="line">at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)</span><br><span class="line">at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:690)</span><br><span class="line">at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)</span><br><span class="line">at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)</span><br><span class="line">at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)</span><br><span class="line">at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)</span><br><span class="line">at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:888)</span><br><span class="line">at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1597)</span><br><span class="line">at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)</span><br><span class="line">at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)</span><br><span class="line">at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)</span><br><span class="line">at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)</span><br><span class="line">at java.lang.Thread.run(Thread.java:748)</span><br></pre></td></tr></table></figure><p>原因：Tomcat本地lib文件夹中没有jstl和standard包，将两个jar包复制粘贴过去就ok了</p><p><strong>EL表达式：${}</strong></p><ul><li><strong>获取数据</strong></li><li><strong>执行运算</strong></li><li><strong>获取web开发的常用对象</strong></li><li><del>调用Java方法（需要手写标签，非常麻烦，不使用）</del></li></ul><h1 id="Servlet"><a href="#Servlet" class="headerlink" title="Servlet"></a>Servlet</h1><h2 id="什么是Servlet"><a href="#什么是Servlet" class="headerlink" title="什么是Servlet"></a>什么是Servlet</h2><p><strong>什么是Servlet</strong></p><ul><li>全称Java Servlet。是用Java编写的服务器端程序，其主要功能爱与交互式地浏览和修改数据，生成动态web内容</li><li>是JavaWeb的核心程序，是JavaWeb三大组件之一（Servlet，Filter，Listener）</li><li>在HTTP请求过程中会把请求的参数放在请求行的URL中，或者是请求体中，这个参数需要服务器来接受解析并处理，Servlet就是用来处理这个过程的</li></ul><p><strong>Servlet的作用</strong></p><ul><li>用来处理客户端发送过来的请求，并对该请求做出响应<ol><li>获取接受客户端发送来的请求数据</li><li>处理请求</li><li>将处理的结果通过响应发送到客户端</li></ol></li></ul><h2 id="编写Servlet"><a href="#编写Servlet" class="headerlink" title="编写Servlet"></a>编写Servlet</h2><p><strong>人工创建servlet</strong></p><ol><li>通常是继承javax.servlet.http.HTTPServlet</li><li>复写doGET(),doPOST()方法</li><li>在web.xml中添加servlet标签以及servlet-mapping</li></ol><p><strong>使用Servlet3.0创建servlet</strong></p><ol><li>创建项目的时候javaEE版本选择6.0</li><li>在servlet包上右键选择new，点击Servlet</li><li>配置@WebServlet(urlPatterns = “/TestServlet”),注解内的访问路径等于web.xml中的url-partener</li></ol><h2 id="HTTPServletRequest"><a href="#HTTPServletRequest" class="headerlink" title="HTTPServletRequest"></a>HTTPServletRequest</h2><p>在Servlet的API中，定义了一个HttpServletRequest接口，它继承自ServletRequest接口。专门用于封装HTTP的请求，由于HTTP请求包含着请求行，请求头和请求体三部分，因此在HttpServletRequest中分别定义了接受请求行请求头请求体的相关方法</p><p><strong>请求行</strong></p><ol><li>getMethod()方法：返回请求方法，请求方法通常是GET或者POST，但也有可能是HEAD，PUT或者DELETE</li><li>getRequestURI()方法：返回URI（URL的从主机和端口之后到表单数据之前的那一部分）</li><li>getRemoteAddr()方法：该方法用于获取请求客户端的IP地址</li><li>getLocalAddr()方法：该方法用于获取服务器当前接受请求的IP地址</li><li>getRemoteport()方法：该方法用于获取请求客户端的端口号</li><li>getProtocol方法：该方法用于获取请求行中的协议名和版本</li><li>getContextPath()方法：该方法用于获取URL中属于web应用程序的路径</li></ol><p><strong>请求头</strong></p><ol><li>getHeader(String name)：该方法用于获取一个指定头字段的值，如果请求头中不包含该字段则返回null，如果包含多个该字段的值则获取第一个值</li><li>getIntHeader( String name):该方法用于获取指定头字段的值,并且将其值转为int类型,如果不存在该字段则返回-1,如果获取到的值不能转换为int则会发生 Number Format Exception异常</li><li>getDateHeaders( String name):该方法用于获取指定头字段的值,并将其按照GMT时间格式转换成一个代表日期/时间的长整数</li><li>getHeaderNames o:该方法用于获取所有包含请求头字段的Enumeration</li></ol><p><strong>获取请求参数</strong></p><ol><li>getParameter(String name)：用于获取某个指定名称的参数值，如果请求中没有包含指定名称的参数，则返回null，如果有指定参数但是没有给设定值，则返回空串“”，如果包含多个该参数的值则返回第一个出现的参数值</li><li>getParameterNames()：该方法用于返回一个包含请求消息中所有参数名的Enumernation</li><li>getParameterMap()：该方法用于将请求中的所有参数和值装入一个map对象然后返回</li></ol><h2 id="HTTPServletResponse"><a href="#HTTPServletResponse" class="headerlink" title="HTTPServletResponse"></a>HTTPServletResponse</h2><p>在Servlet的API中，定义了一个HttpServletResponse接口，它继承自ServletResponse接口。专门用于封装HTTP的响应，由于HTTP响应包含着响应行，响应头和响应体三部分，因此在HttpServletResponse中分别定义了接受响应行响应头响应体的相关方法</p><p><strong>发送响应行</strong></p><ol><li>setStatus(int status)：当Servlet向客户端回送响应消息时，需要设置一个状态码，该方法用于设置HTTP响应消息的状态码，并生成响应状态行。由于响应状态行中装填的描述直接和状态码相关，而HTTP协议版本由服务器决定，因此只需要设置该方法，就可以发送一个响应行，正常情况下，web服务器会默认发送一个200的状态码</li><li>sendError(int code)：该方法用于发送标识错误信息的状态码，例如404找不到访问的资源，他还有一种重载的形式，sendError(int code,String errorMessage)，errorMessage可以以文本形式显示在客户端浏览器</li></ol><p><strong>发送响应头</strong></p><ol><li>addHeader(String name,String value)：该方法用来设置HTTP协议的响应头字段，name时响应头字段名，value是响应字段的值</li><li>setHeader(String name,String value)：该方法和addHeader相同，唯一的区别是addHeader可以重复添加同名的响应头字段，setHeader会覆盖之前添加的同名的响应头</li><li>addIntHeader(String name,int value)：该方法用于将value值为int的字段加入响应头中</li><li>setIntHeader(String name,int value)：该方法和addIntHeader相同，唯一的区别是addIntHeader可以重复添加同名的响应头字段，setIntHeader会覆盖之前添加的同名的响应头</li><li>setContentLength()：该方法用于设置HTTP响应消息的内容大小，单位是字节</li><li>setContentType()：该方法用于设置Servlet输出内容的类型，也就是HTTP协议中的Content-Type响应头。如果相应的内容是文本，还可以设置字符编码</li></ol><p><strong>发送响应消息体</strong></p><p>由于在HTTP响应消息中，大量的数据都是通过响应体传递的，因此ServletResponse遵循以IO流传递大数据的设计理念，定义了两个与输出流相关的方法，具体如下</p><ol><li>getOutputStream()方法：该方法获取的字节流输出对象为ServletOutputStream类型，他是OutputStream的子类，因此可以直接输出字节数组中的二进制数据</li><li>getWriter()方法：该方法获得的字符输出流对象是PrintWriter类型，由于它可以直接输出文本类型，因此要输出网页文档，需要使用这个方法</li></ol><h2 id="7-5、Servlet的生命周期"><a href="#7-5、Servlet的生命周期" class="headerlink" title="7.5、Servlet的生命周期"></a>7.5、Servlet的生命周期</h2><p><strong>定义</strong>：Servlet从创建到销毁的过程</p><p><strong>init()方法</strong>：初始化方法</p><p><strong>service(ServletRequest,ServletResponse)方法</strong>：每次访问都会调用来处理请求</p><p><strong>destory()方法</strong>：销毁servlet方法</p><p><strong>生命周期</strong>：</p><p><strong>开始</strong>-&gt;<strong>Servlet实例是否存在</strong>-&gt;<strong>装载Servlet类并创建实例</strong>-&gt;<strong>调用init()方法</strong>-&gt;<strong>调用service()方法</strong>-&gt;<strong>服务器关闭</strong>-&gt;<strong>调用destory()方法</strong></p><p><strong>注意：</strong>Servlet实例是单例的，即无论请求多少次Servlet，最多只有一个Servlet实例，如果是多个客户端并发，同时访问Servlet的时候，服务器会启动多个线程分别执行Servlet的service方法</p><h2 id="请求转发"><a href="#请求转发" class="headerlink" title="请求转发"></a>请求转发</h2><p>Servlet之间可以实现跳转,从一个 Servlet跳转到另一个Servlet,利用Servlet的跳转技术可以很方便的把一块业务模块分开,比如使用一个<br>Servlet接收用户提交数据,使用另个一个 Servlet读取数据库,最后跳转到另一个Servlet把处理结果展示出来。这也就是MVC模式( modle,view,controller)</p><p><strong>转发forward</strong></p><p>在Servlet中如果当前的web资源不想处理请求时，可以通过forward方法将当前的请求传递给其他的web资源处理，这种方式称为请求转发</p><p><strong>请求重定向</strong></p><p>重定向时根据服务器返回的状态码来实现的，客户端浏览器在请求服务器的时候，服务端会返回一个状态码。服务器通过HttpServletResponse的setStatus方法来设置状态码。如果服务器这个时候返回的状态码，如果服务器这个时候返回的状态码是301或者是302，则浏览器就会到新的网址重新请求该资源，服务器的响应中带着这个新资源的地址。</p><p><strong>请求重定向相关代码:</strong><br>//设置状态码为302, SC MOVED_TEMPORAILY就是302的静态常量<br>response.setStatus(HttpServletResponse. SC_MOVED_TEMPORAILy)<br>//在请求头中携带新的资源地址<br>response.setHeader(“location”,”<a href="http://www.baiducom&quot;/">http://www.baiducom&quot;</a>)<br>为了使用方便 HttpServletResponse中将setStatus和setHeader这两种方法合并到一起叫做sendRedirect(String location)</p><p><strong>重定向和转发的区别</strong></p><ol><li>重定向的地址栏会发生变化，转发不会</li><li>重定向是两次请求两次响应，转发是一次请求一次响应</li><li>重定向路径需要加工程名，转发路径不需要加工程名</li><li>重定向可以跳转到任何网站，转发只能在服务器内部进行</li></ol><h1 id="Cookie与Session会话技术"><a href="#Cookie与Session会话技术" class="headerlink" title="Cookie与Session会话技术"></a>Cookie与Session会话技术</h1><h2 id="会话技术"><a href="#会话技术" class="headerlink" title="会话技术"></a>会话技术</h2><p><strong>会话技术</strong></p><p>从打开一个浏览器访问某个站点，到关闭这个浏览器的整个过程，称为一次会话，会话技术就是记录这次会话中客户端的状态和数据的。</p><p><strong>会话分类</strong></p><ol><li>Cookie：数据存储在客户端本地，减少服务器端的存储的压力，安全性不好，客户端可以清楚cookie</li><li>Session：将数据存储到服务器端，安全性相对好，增加服务器的压力</li></ol><h2 id="创建和发送Cookie"><a href="#创建和发送Cookie" class="headerlink" title="创建和发送Cookie"></a>创建和发送Cookie</h2><p> <strong>创建Cookie</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Cookie cookie = <span class="keyword">new</span> Cookie(String cookieName,String cookieValue);</span><br><span class="line"><span class="comment">//cookie中不能存储中午呢</span></span><br></pre></td></tr></table></figure><p><strong>向客户端发送cookie</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.addCookie(Cookie cookie)</span><br></pre></td></tr></table></figure><h2 id="常见API"><a href="#常见API" class="headerlink" title="常见API"></a>常见API</h2><p><strong>设置持久化时间</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cookie.setMaxAge(<span class="keyword">int</span> secondes);</span><br><span class="line"><span class="comment">//如果不设置持久化时间信息，cookie会存储在浏览器的内存中，浏览器关闭，cookie信息销毁(会话级别的cookie)，如果设置持久化时间，cookie信息会被持久化到浏览器的磁盘文件里</span></span><br></pre></td></tr></table></figure><p><strong>设置携带路径</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cookie.setPath(String path);</span><br><span class="line"><span class="comment">//如果不设置携带路径，那么该cookie信息会在访问产生该cookie的web资源所在的路径都携带cookie信息</span></span><br></pre></td></tr></table></figure><p><strong>发送cookie</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.addCookie(Cookie cookie);</span><br></pre></td></tr></table></figure><p><strong>删除cookie</strong></p><p>如果想删除客户端的已经存储的cookie信息，那么就是用同名同路径持久化时间的cookie进行覆盖即可</p><h2 id="获取Cookie"><a href="#获取Cookie" class="headerlink" title="获取Cookie"></a>获取Cookie</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过request获取所有的cookie</span></span><br><span class="line">Cookie[] cookies = request.getCookies();</span><br><span class="line"><span class="comment">//遍历Cookie数组，通过Cookie的名称获得我们想要的Cookie</span></span><br><span class="line"><span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">       <span class="keyword">if</span> (cookie.getName().equal(cookieName)) &#123;</span><br><span class="line">           String cookieValue = cookie.getvalue();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h2 id="Sesison的会话流程"><a href="#Sesison的会话流程" class="headerlink" title="Sesison的会话流程"></a>Sesison的会话流程</h2><p>Session技术是将数据存储在服务器端的技术,会为每个客户端都创建一块内存空间存储客户的数据,但客户端需要每次都携带一个标识ID去服务器中寻找属于自己的内存空间。所以说 Session的实现是基于 Cookie, Session需要借助于 Cookie存储客户的唯一性标识JSESSIONID<br><strong>注意点</strong>:在 Session这我们需要学习如下三个问题:</p><ol><li>怎样获得属于本客户端的 session对象(内存区域)?</li><li>怎样向 session中存取数据( session也是一个域对象)?</li><li>session对象的生命周期</li></ol><h2 id="Session对象的创建与获取"><a href="#Session对象的创建与获取" class="headerlink" title="Session对象的创建与获取"></a>Session对象的创建与获取</h2><p><strong>获得Session对象</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HttpSession session = request.getSession();</span><br></pre></td></tr></table></figure><p>此方法会获得专属于当前会话的 Session对象,如果服务器端没有该会话的 Session对象会创建一个新的 Session返回,如果已经有了属于该会话的 Session直接将已有的 Session返回(实质就是根据JSESSIONID判断该客户端是否在服务器上已经存在 session了)</p><h2 id="Session存取数据-amp-生命周期"><a href="#Session存取数据-amp-生命周期" class="headerlink" title="Session存取数据&amp;生命周期"></a>Session存取数据&amp;生命周期</h2><ol><li>怎样向 session中存取数据( session也是一个域对象)ession也是存储数据的区域对象,所以 session对象也具有如下三个方法<ol><li>session. setAttribute(String name, Object obj)</li><li>session. getAttribute(String name):</li><li>session. removeAttribute(String name)</li></ol></li><li>Session对象的生命周期<ol><li>创建:第一次执行 request. getSession0时创建</li><li>销毁:服务器(非正常)关闭时 session过期/失效(默认30分钟)</li></ol></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JavaWeb&quot;&gt;&lt;a href=&quot;#JavaWeb&quot; class=&quot;headerlink&quot; title=&quot;JavaWeb&quot;&gt;&lt;/a&gt;JavaWeb&lt;/h1&gt;&lt;h1 id=&quot;基本概念&quot;&gt;&lt;a href=&quot;#基本概念&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>Python</title>
    <link href="http://example.com/2021/04/19/Python/"/>
    <id>http://example.com/2021/04/19/Python/</id>
    <published>2021-04-19T02:58:52.000Z</published>
    <updated>2021-05-08T05:54:47.071Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我的Python学习记录"><a href="#我的Python学习记录" class="headerlink" title="我的Python学习记录"></a>我的Python学习记录</h1><p></br><img src="https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/2021-4-19_3.jpg" style="width:20%;height:20%" /></p><p> </br><span id="more"></span></p><p>学习参考:<a href="https://www.bilibili.com/video/BV1wD4y1o7AS?p=1">https://www.bilibili.com/video/BV1wD4y1o7AS?p=1</a></p><h2 id="Day-1-2021-1-11"><a href="#Day-1-2021-1-11" class="headerlink" title="Day 1 (2021.1.11)"></a>Day 1 (2021.1.11)</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>​    pycharm下载地址<a href="https://www.jetbrains.com/zh-cn/pycharm/download/#section=windows">https://www.jetbrains.com/zh-cn/pycharm/download/#section=windows</a></p><p>​    python下载地址<a href="https://www.python.org/downloads/">https://www.python.org/downloads/</a></p><h3 id="print（）"><a href="#print（）" class="headerlink" title="print（）"></a>print（）</h3><ol><li><p>可以输出数字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">100</span>)</span><br><span class="line">print(<span class="number">100.0</span>)</span><br></pre></td></tr></table></figure></li></ol><p> <img src="https://img-blog.csdnimg.cn/20210111214443961.png#pic_center" alt="在这里插入图片描述"></p><ol start="2"><li><p>可以输出字符串(‘’和””没有区别，“”里的’’不用转义字符，’’里的“”不用转义字符)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&#x27;Hello Python&#x27;</span>)</span><br><span class="line">print(<span class="string">&quot;Hello Python&quot;</span>)</span><br><span class="line">print(<span class="string">&#x27;&quot;Hello Python&quot;&#x27;</span>)</span><br><span class="line">print(<span class="string">&quot;&#x27;Hello Python&#x27;&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210111214539709.png#pic_center" alt="在这里插入图片描述"></p></li></ol><ol start="3"><li><p>可以输出表达式的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">3</span> + <span class="number">1</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210111214605229.png#pic_center" alt="在这里插入图片描述"></p></li></ol><ol start="4"><li><p>可以不换行输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&#x27;Hello&#x27;</span>, <span class="string">&#x27;Python&#x27;</span>, <span class="string">&#x27;Python&#x27;</span>, <span class="string">&#x27;Hello&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210111214629244.png#pic_center" alt="在这里插入图片描述"></p></li></ol><ol start="5"><li><p>可以输出到文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fileOpen = <span class="built_in">open</span>(<span class="string">&#x27;D:/FileOpen.txt&#x27;</span>, <span class="string">&#x27;a+&#x27;</span>)</span><br><span class="line"><span class="comment">#指定文件可以不存在，但是盘符必须存在</span></span><br><span class="line"><span class="comment">#a+ 如果指定文件不存在则创建，如果存在则在原有文件的基础上追加</span></span><br><span class="line">print(<span class="string">&#x27;Hello Python&#x27;</span>, file = fileOpen)</span><br><span class="line"><span class="comment">#使用file=fileOpen</span></span><br><span class="line">fileOpen.close()</span><br></pre></td></tr></table></figure></li></ol><h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><ol><li>什么是转义字符：就是反斜杠\加上想要实现的转义功能首字母</li><li>为什么需要转义字符：<ol><li>当字符串中包含反斜杠\，单引号’’，双引号””等有特殊用途的字符时，必须使用反斜杠对这些字符进行转义（表示这些字符就是这些字符本身，并不使用其特殊用途）<ul><li>反斜杠：\\</li><li>单引号：\‘</li><li>双引号：\“</li></ul></li><li>当字符串中包含换行，回车，制表或退格等无法直接表示的特殊字符时，也需要转义字符<ul><li>换行：\n 另起一行</li><li>回车：\r 回到本行开头，覆盖之前内容</li><li>制表：\t 跳转到本行下一制表的开头</li><li>退格：\b 删除退格符前一字符</li></ul></li></ol></li></ol><h3 id="原字符"><a href="#原字符" class="headerlink" title="原字符"></a>原字符</h3><ol><li>什么是原字符：就是字符串开头加r或R</li><li>为什么需要原字符：不希望字符串中的转义字符起作用，就是用原字符</li><li>注意：最后一个字符不能以单个反斜杠结尾</li></ol><h3 id="编码方式"><a href="#编码方式" class="headerlink" title="编码方式"></a>编码方式</h3><p>python采用unicode编码，即用两个字节表示一个字符</p><h3 id="标识符和保留字"><a href="#标识符和保留字" class="headerlink" title="标识符和保留字"></a>标识符和保留字</h3><ol><li><p>保留字</p><ul><li>定义：一些单词被赋予了特定意义（keyword），在为对象起名时不能重复</li><li>包括：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#39;False&#39;, &#39;None&#39;, &#39;True&#39;, &#39;__peg_parser__&#39;, &#39;and&#39;, &#39;as&#39;, &#39;assert&#39;, &#39;async&#39;, &#39;await&#39;, &#39;break&#39;, &#39;class&#39;, &#39;continue&#39;, &#39;def&#39;, &#39;del&#39;, &#39;elif&#39;, &#39;else&#39;, &#39;except&#39;, &#39;finally&#39;, &#39;for&#39;, &#39;from&#39;, &#39;global&#39;, &#39;if&#39;, &#39;import&#39;, &#39;in&#39;, &#39;is&#39;, &#39;lambda&#39;, &#39;nonlocal&#39;, &#39;not&#39;, &#39;or&#39;, &#39;pass&#39;, &#39;raise&#39;, &#39;return&#39;, &#39;try&#39;, &#39;while&#39;, &#39;with&#39;, &#39;yield&#39;</span><br></pre></td></tr></table></figure></li><li><p>标识符</p><ul><li>定义：为变量，函数，类，模块和其他对象所起的名字就是标识符</li><li>规则：<ul><li>由字母，数字，下划线组成</li><li>不能以数字开头</li><li>不能与保留字相同</li><li>严格区分大小写</li></ul></li></ul></li></ol><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><ol><li><p>变量是内存当中一个带标签的盒子</p></li><li><p>变量由三部分组成</p><ul><li>标识：表示对象所存储的内存地址，使用id()获取</li><li>类型：表示对象的数据类型，使用type()获取</li><li>值：表示对象所存储的具体数据，使用变量名直接访问</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">&quot;标识&quot;</span>, <span class="built_in">id</span>(name))</span><br><span class="line">print(<span class="string">&quot;类型&quot;</span>, <span class="built_in">type</span>(name))</span><br><span class="line">print(<span class="string">&quot;值&quot;</span>, name)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210111214713522.png#pic_center" alt="在这里插入图片描述"></p></li></ol><ol start="3"><li><p>变量可以多次赋值，当多次赋值之后，变量名会指向新的空间,原来的空间变为内存垃圾</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&quot;我的变量&quot;</span></span><br><span class="line">print(<span class="string">&quot;标识&quot;</span>, <span class="built_in">id</span>(name))</span><br><span class="line">print(<span class="string">&quot;值&quot;</span>, name)</span><br><span class="line">name = <span class="string">&quot;他的变量&quot;</span></span><br><span class="line">print(<span class="string">&quot;标识&quot;</span>, <span class="built_in">id</span>(name))</span><br><span class="line">print(<span class="string">&quot;值&quot;</span>, name)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210111214748798.png#pic_center" alt="在这里插入图片描述"></p></li></ol><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><ol><li><p>常用数据类型</p><ul><li><p>整数类型int</p><ul><li>整数的不同进制表示方式<ul><li>十进制 默认表示</li><li>二进制 以0b开头</li><li>八进制 以0o开头</li><li>十六进制 以0x开头</li></ul></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">bInt = <span class="number">0b110010</span></span><br><span class="line">dInt = <span class="number">50</span></span><br><span class="line">oInt = <span class="number">0o62</span></span><br><span class="line">xInt = <span class="number">0x32</span></span><br><span class="line">print(bInt)</span><br><span class="line">print(dInt)</span><br><span class="line">print(oInt)</span><br><span class="line">print(xInt)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210111214814962.png#pic_center" alt="在这里插入图片描述"></p></li></ul></li></ol><ul><li><p>浮点数类型float</p><ul><li>浮点数由整数部分和小数部分组成</li><li>浮点数存储具有不精确性</li><li>使用浮点数进行计算时，可能会出现小数位数不确定的情况</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">1.1</span> + <span class="number">2.2</span>)</span><br><span class="line">print(<span class="number">1.1</span> + <span class="number">2.1</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021011121485252.png#pic_center" alt="在这里插入图片描述"></p></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">* 导入decimal解决精度不足问题</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line"><span class="keyword">from</span> decimal <span class="keyword">import</span> Decimal</span><br><span class="line">print(<span class="number">1.1</span> + <span class="number">2.2</span>)</span><br><span class="line">print(Decimal(<span class="string">&#x27;1.1&#x27;</span>) + Decimal(<span class="string">&#x27;2.2&#x27;</span>))</span><br><span class="line">```</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210111214906374.png#pic_center" alt="在这里插入图片描述"></p><ul><li><p>布尔类型bool</p><ul><li>用于表示真或假的值</li><li>True为真，False为假</li><li>布尔值可以转化成整数<ul><li>True = 1</li><li>False = 0</li></ul></li></ul></li><li><p>字符串类型str</p><ul><li>字符串又被称为不可变的字符序列</li><li>可以使用单引号’ ‘，双引号” “，三引号”‘ “’或者”“” “”“来定义</li><li>单引号和双引号定义的字符串必须在一行</li><li>三引号定义的字符串可以分布在连续的多行</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">name1 = <span class="string">&#x27;name1&#x27;</span></span><br><span class="line">name2 = <span class="string">&quot;name2&quot;</span></span><br><span class="line">name3 = <span class="string">&#x27;&#x27;&#x27;name</span></span><br><span class="line"><span class="string">3&#x27;&#x27;&#x27;</span></span><br><span class="line">name4 = <span class="string">&quot;&quot;&quot;name</span></span><br><span class="line"><span class="string">4&quot;&quot;&quot;</span></span><br><span class="line">print(name1)</span><br><span class="line">print(name2)</span><br><span class="line">print(name3)</span><br><span class="line">print(name4)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210111214925740.png#pic_center" alt="在这里插入图片描述"></p></li></ul><ol start="2"><li><p>数据类型转换</p><ul><li>为什么需要数据类型转换：将不同数据类型的数据拼接在一起</li><li>如何转化<ul><li>其他数据类型转字符串 str()<ul><li>也可以用引号转换</li></ul></li><li>其他数据类型转整数 int()<ul><li>文字类和小数类字符串，无法转化成整数</li><li>浮点数转化成整数，抹零取整</li></ul></li><li>其他数据类型转浮点数<ul><li>文字类无法转化<br>054851)]</li></ul></li></ul></li></ul></li><li><p>数据类型转换</p><ul><li>为什么需要数据类型转换：将不同数据类型的数据拼接在一起</li><li>如何转化<ul><li>其他数据类型转字符串 str()<ul><li>也可以用引号转换</li></ul></li><li>其他数据类型转整数 int()<ul><li>文字类和小数类字符串，无法转化成整数</li><li>浮点数转化成整数，抹零取整</li></ul></li><li>其他数据类型转浮点数 float()<ul><li>文字类无法转化</li><li>整数转成浮点数,末尾为.0</li></ul></li></ul></li></ul></li></ol><h2 id="Day-2-2021-1-12"><a href="#Day-2-2021-1-12" class="headerlink" title="Day 2 (2021.1.12)"></a>Day 2 (2021.1.12)</h2><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><ol><li><p>在代码中对代码的功能进行解释性说明的标注性文字，可以提高代码的可读性</p></li><li><p>注释的内容会被Python解释器忽略</p></li><li><p>通常包括三种类型的注释</p><ul><li><p>单行注释：以#开头，直到换行结束</p></li><li><p>多行注释：没有单多的多行注释标记，将一对三引号之间的内容成为多行注释</p></li><li><p>中文编码声明注释：在文件开头加上中文声明注释，用以指定源码文件的编码格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:gbk</span></span><br><span class="line"><span class="comment">#:后面是指定的编码格式</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="input"><a href="#input" class="headerlink" title="input"></a>input</h3><ol><li>作用：接受来自用户的输入</li><li>返回值类型：输入值的类型为str</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">input</span>()</span><br><span class="line">b = <span class="built_in">input</span>()</span><br><span class="line">c = <span class="built_in">int</span>(a) + <span class="built_in">int</span>(b)</span><br><span class="line">print(a + b)</span><br><span class="line">print(c)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210112235828635.png" alt="在这里插入图片描述"></p><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><ol><li><p>常用运算符</p><ol><li><p>算术运算符</p><ol><li>标准运算符<ul><li>加+</li><li>减-</li><li>乘*</li><li>除/</li><li>整除//(一正一负向下取整)</li></ul></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">1</span> + <span class="number">1</span>)  <span class="comment"># 加法运算</span></span><br><span class="line">print(<span class="number">1</span> - <span class="number">1</span>)  <span class="comment"># 减法运算</span></span><br><span class="line">print(<span class="number">2</span> * <span class="number">2</span>)  <span class="comment"># 乘法运算</span></span><br><span class="line">print(<span class="number">1</span> / <span class="number">2</span>)  <span class="comment"># 除法运算</span></span><br><span class="line">print(<span class="number">1</span> // <span class="number">2</span>)  <span class="comment"># 整除运算(两正)</span></span><br><span class="line">print(-<span class="number">1</span> // -<span class="number">2</span>)  <span class="comment"># 整除运算(两负)</span></span><br><span class="line">print(-<span class="number">1</span> // <span class="number">2</span>)  <span class="comment"># 整除运算(一正一负)</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210112235036365.png#pic_center" alt="在这里插入图片描述"></p></li><li><p>取余运算符</p><ul><li>%</li><li>一正一负 公式 余数 = 被除数 - 除数 * 商(整除)</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print(-<span class="number">11</span> % <span class="number">2</span>)  <span class="comment"># 取余运算(一正一负)</span></span><br><span class="line">print(-<span class="number">11</span> - <span class="number">2</span> * (-<span class="number">11</span> // <span class="number">2</span>))</span><br><span class="line">print(<span class="number">11</span> % -<span class="number">2</span>)  <span class="comment"># 取余运算(一正一负)</span></span><br><span class="line">print(<span class="number">11</span> - -<span class="number">2</span> * (<span class="number">11</span> // -<span class="number">2</span>))</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210112235142837.png#pic_center" alt="在这里插入图片描述"></p></li><li><p>幂运算符</p><hr><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="number">2</span> ** <span class="number">3</span>)  <span class="comment"># 幂运算</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/202101122352240.png#pic_center" alt="在这里插入图片描述"></p></li></ol></li></ol><ol start="2"><li><p>赋值运算符  =</p><ol><li>执行顺序：由右到左</li><li>支持链式赋值：a = b = c = 20，注意：只有一个数值对象，a,b,c指向同一个对象</li><li>支持参数赋值：+=，-=，*=，/=，//=，%=</li><li>支持系列解包赋值：a,b,c = 20,30,40 注意：左右变量和值的数量要对应</li><li>交换两变量的值</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">10</span></span><br><span class="line">b = <span class="number">20</span></span><br><span class="line">a, b = b, a</span><br><span class="line">print(<span class="string">&#x27;a = &#x27;</span> + <span class="built_in">str</span>(a))</span><br><span class="line">print(<span class="string">&#x27;b = &#x27;</span> + <span class="built_in">str</span>(b))</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210112235240156.png#pic_center" alt="在这里插入图片描述"></p></li></ol><pre><code>  3. 比较运算符     1. 运算结果为bool类型     2. 比较变量的值        * &lt;,&gt;,&gt;=,&lt;=,!=,==     3. 比较变量的标识(id)        * is,is not  4. 布尔运算符     1. and 有False为False     2. or 有True为True     3. not 取反     4. in，not in 前者变量是否在后者变量之中  5. 位运算符     1. 按位与&amp; 对应位数均为1才是1，否则为0     2. 按位或| 对应数位均为0才是0，否则为1     3. 左移位运算&lt;&lt; 高位溢出舍弃，低位补0，左移1位，相当于乘2     4. 右移位运算&gt;&gt; 低位溢出舍弃，高位补0 ，右移1位，相当于除2</code></pre><h3 id="优先级"><a href="#优先级" class="headerlink" title="优先级"></a>优先级</h3><ol><li>算术运算-&gt;位运算-&gt;比较运算-&gt;布尔运算-&gt;赋值运算</li></ol><h2 id="Day-3-2021-1-13"><a href="#Day-3-2021-1-13" class="headerlink" title="Day 3 (2021.1.13)"></a>Day 3 (2021.1.13)</h2><h3 id="程序的组织结构"><a href="#程序的组织结构" class="headerlink" title="程序的组织结构"></a>程序的组织结构</h3><ol><li><p>任何简单或复杂的算法都可以由顺序结构，选择结构和循环结构这三种基本结构组合而成</p><ol><li><p>顺序结构</p><ul><li>程序由上到下顺序地执行代码，中间没有任何的判断和跳转，直到程序结束</li></ul></li><li><p>选择结构</p><ul><li><p>Python一切皆对象，所有对象都有一个布尔值，调用bool()可以获取对象的布尔值</p><ul><li>数值0，数值0.0，bool值False，空字符串，空列表，空元组，空字典，空集合为False</li><li>其余为True</li></ul></li><li><p>单分支结构</p><ul><li>语法结构</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">0</span> &lt; <span class="number">1</span>:</span><br><span class="line">    print(<span class="string">&quot;0 &lt; 1&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021011323234683.png#pic_center" alt="在这里插入图片描述"></p></li></ul></li></ol></li></ol><pre><code>  * 双分支结构    * 语法结构    <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">0</span> &gt; <span class="number">1</span>:</span><br><span class="line">print(<span class="string">&quot;0 &gt; 1&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">&quot;0 &lt;= 1&quot;</span>)</span><br></pre></td></tr></table></figure>    ![在这里插入图片描述](https://img-blog.csdnimg.cn/20210113232334347.png#pic_center)  * 多分支结构    * 语法结构    <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">0</span> &gt; <span class="number">1</span>:</span><br><span class="line">    print(<span class="string">&quot;0 &gt; 1&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> <span class="number">0</span> == <span class="number">1</span>:</span><br><span class="line">    print(<span class="string">&quot;0 == 1&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&quot;0 &lt; 1&quot;</span>)</span><br></pre></td></tr></table></figure>    ![在这里插入图片描述](https://img-blog.csdnimg.cn/20210113232324212.png#pic_center)  * 嵌套if    * 语法结构    <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="number">8</span> % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">if</span> <span class="number">8</span> % <span class="number">4</span> == <span class="number">0</span>:</span><br><span class="line">        print(<span class="string">&quot;8整除4&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;8不能整除4&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&quot;8不能整除2&quot;</span>)</span><br></pre></td></tr></table></figure>    ![在这里插入图片描述](https://img-blog.csdnimg.cn/20210113232259900.png#pic_center)  * 条件表达式    * 语法结构    <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print((<span class="string">&quot;0 &lt; 1&quot;</span>) <span class="keyword">if</span> <span class="number">0</span> &lt; <span class="number">1</span> <span class="keyword">else</span> (<span class="string">&quot;0 &gt; 1&quot;</span>))</span><br></pre></td></tr></table></figure>    ![在这里插入图片描述](https://img-blog.csdnimg.cn/20210113232238263.png#pic_center)  * pass    * 什么都不做，只是一个占位符    * 搭建语法结构</code></pre><ol start="3"><li><p>range()</p><ul><li>用于生成一个整数序列</li><li>创建range对象的三种方式（包含start，不含stop）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">stop = <span class="number">5</span></span><br><span class="line">start = <span class="number">1</span></span><br><span class="line">step = <span class="number">2</span></span><br><span class="line">r1 = <span class="built_in">range</span>(stop)</span><br><span class="line">r2 = <span class="built_in">range</span>(start, stop)</span><br><span class="line">r3 = <span class="built_in">range</span>(start, stop, step)</span><br><span class="line">print(<span class="built_in">list</span>(r1))</span><br><span class="line">print(<span class="built_in">list</span>(r2))</span><br><span class="line">print(<span class="built_in">list</span>(r3))</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210113232214659.png#pic_center" alt="在这里插入图片描述"></p></li></ol><pre><code>  * range的优点：不管range对象表述的整数序列，所有range对象占用的内存空间都是相同的，在内存中只需要存储start，stop，step，只有当用到range对象时，才会去计算序列中的相关元素  * in 和 not in判断整数序列中是否存在指定的整数</code></pre><ol start="4"><li><p>循环结构</p><ul><li><p>反复做同一件事，称为循环</p></li><li><p>循环分类</p><ul><li>while</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="number">3</span>:</span><br><span class="line">    i += i</span><br><span class="line">print(i)</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2021011323215932.png#pic_center" alt="在这里插入图片描述"></p></li><li><p>for-in</p><ul><li>in表达从(字符串、序列等)中依次取值，称为遍历</li><li>遍历对象必须是可迭代对象</li><li><img src="https://img-blog.csdnimg.cn/20210113232129918.png#pic_center" alt="在这里插入图片描述"></li></ul></li></ul></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">r1 = <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">5</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> r1:</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure><ol start="5"><li><p>流程控制</p><ol><li><p>break</p><ul><li>用于结束循环结构，通常与分支结构if一起使用</li></ul></li><li><p>continue</p><ul><li>用于提前结束本次循环，进入下一循环，通常与分支结构中的if一起使用</li></ul></li><li><p>else</p><ul><li><p>没有触发brea，循环完整结束执行else</p></li><li><p>for-else</p></li><li><p>while-else</p></li></ul></li><li><p>嵌套循环</p></li></ol><ul><li>循环结构中又嵌套了另外的完整的循环结构，其中内层循环作为外层循环的循环体执行</li><li>内层循环的break退出内存循环，并执行内层循环之后的语句</li><li>内层循环的continue跳过本次外层循环剩下的语句</li></ul></li></ol><h2 id="Day-4-2021-01-14"><a href="#Day-4-2021-01-14" class="headerlink" title="Day 4 (2021.01.14)"></a>Day 4 (2021.01.14)</h2><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><ol><li><p>变量可以存储一个元素，而列表是一个“大容器”可以存储许多个元素，程序可以方便地对这些数据进行整体操作</p></li><li><p>列表相当于其他语言的数组</p></li><li><p>列表中的对象可以是不同数据类型的</p></li><li><p>列表创建方式</p><ul><li><p>使用中括号[]</p></li><li><p>调用内置函数list()</p></li><li><p>```python<br>myList1 = [1, 2.2, ‘3.3’]<br>myList2 = list([2, 3.3, ‘4.4’])<br>print(myList1)<br>print(myList2)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">     ![image-20210114192708657](C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210114192708657.png)</span><br><span class="line"></span><br><span class="line">5. 列表的特点</span><br><span class="line"></span><br><span class="line">   1. 列表元素按顺序有序排序</span><br><span class="line">   2. 索引映射唯一个数据</span><br><span class="line">   3. 列表可以存储重复数据</span><br><span class="line">   4. 任意数据类型混存</span><br><span class="line">   5. 根据需要动态分配和回收内存</span><br><span class="line"></span><br><span class="line">6. 列表元素查询</span><br><span class="line"></span><br><span class="line">   1. 正向索引从0到N-1</span><br><span class="line"></span><br><span class="line">   2. 逆向索引从-N到-1</span><br><span class="line"></span><br><span class="line">   3. 指定索引不存在，抛出IndexError</span><br><span class="line"></span><br><span class="line">   4. 获取多个元素，列表的切片</span><br><span class="line"></span><br><span class="line">      * myList[start:stop:step​]</span><br><span class="line"></span><br><span class="line">      * 截取结果返回原列表的片段</span><br><span class="line"></span><br><span class="line">      * 范围[start,stop)</span><br><span class="line"></span><br><span class="line">      * step</span><br><span class="line"></span><br><span class="line">        * step默认为1</span><br><span class="line"></span><br><span class="line">        * step为正数</span><br><span class="line"></span><br><span class="line">          * [:stop:step]，切片的第一个元素默认是列表的第一个元素</span><br><span class="line">          * [start::step]，切片的最后一个元素默认是列表的最后一个元素</span><br><span class="line"></span><br><span class="line">        * step为负数</span><br><span class="line"></span><br><span class="line">          * [:stop:step]，切片的第一个元素默认是列表的最后一个元素</span><br><span class="line">          * [start::step]，切片的最后一个元素默认是列表的第一个元素</span><br><span class="line"></span><br><span class="line">        * &#96;&#96;&#96;python</span><br><span class="line">          myList1 &#x3D; [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span><br><span class="line">          print(myList1[:6:1])</span><br><span class="line">          print(myList1[3::1])</span><br><span class="line">          print(myList1[:6:-1])</span><br><span class="line">          print(myList1[5::-1])</span><br></pre></td></tr></table></figure><pre><code> ![image-20210114202853814](C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210114202853814.png)</code></pre></li></ul></li><li><p>列表元素的存在判断和遍历</p><ul><li><p>in 和 not in  </p></li><li><p>遍历</p><ul><li><p>```python<br>myList = [100, 200.0, ‘Python’]<br>for item in myList:</p><pre><code>print(item)</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">       ![image-20210115210120130](C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210115210120130.png)</span><br><span class="line"></span><br><span class="line">8. 列表元素的增加</span><br><span class="line"></span><br><span class="line">   * append()：在列表的末尾添加一个元素，不生成新的列表对象，将list打包添加</span><br><span class="line"></span><br><span class="line">     * &#96;&#96;&#96;python</span><br><span class="line">       myList1 &#x3D; [100, 200.0, &#39;Python&#39;]</span><br><span class="line">       myList1.append(50)</span><br><span class="line">       myList2 &#x3D; [10, 20.0]</span><br><span class="line">       myList1.append(myList2)</span><br><span class="line">       print(myList1)</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210115215742919.png" alt="image-20210115215742919"></p></li></ul></li><li><p>extend()：在列表的末尾至少添加一个元素，将list拆开添加</p><ul><li><p>```python<br>myList1 = [100, 200.0, ‘Python’]<br>myList2 = [10, 20.0]<br>myList1.extend(myList2)<br>print(myList1)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    ![image-20210115220005649](C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210115220005649.png)</span><br><span class="line"></span><br><span class="line">* insert(index,value)：在列表的任意位置添加一个元素</span><br><span class="line"></span><br><span class="line">  * &#96;&#96;&#96;python</span><br><span class="line">    myList1 &#x3D; [100, 200.0, &#39;Python&#39;]</span><br><span class="line">    myList1.insert(1, 40)</span><br><span class="line">    print(myList1)</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210115220154249.png" alt="image-20210115220154249"></p></li></ul></li><li><p>切片：在列表的任意位置至少添加一个元素，替换</p><ul><li><p>```python<br>myList1 = [100, 200.0, ‘Python’]<br>myList2 = [True]<br>myList1[1:] = myList2<br>print(myList1)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">       ![image-20210115220459416](C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210115220459416.png)</span><br><span class="line"></span><br><span class="line">9. 列表元素的删除操作</span><br><span class="line"></span><br><span class="line">   * remove()</span><br><span class="line"></span><br><span class="line">     * 一次删除一个元素</span><br><span class="line"></span><br><span class="line">     * 重复元素只删除第一个</span><br><span class="line"></span><br><span class="line">     * 元素不存在抛出ValueError</span><br><span class="line"></span><br><span class="line">     * &#96;&#96;&#96;python</span><br><span class="line">       myList1 &#x3D; [100, 100, 100]</span><br><span class="line">       myList1.remove(100)</span><br><span class="line">       print(myList1)</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210115221358848.png" alt="image-20210115221358848"></p></li></ul></li><li><p>pop()</p><ul><li><p>删除一个指定索引位置上的元素</p></li><li><p>指定索引不存在抛出IndexError</p></li><li><p>不指定索引，删除列表最后一个元素</p></li><li><p>```python<br>myList1 = [100, 200, 300]<br>myList1.remove(100)<br>print(myList1)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">       ![image-20210115221456576](C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210115221456576.png)</span><br><span class="line"></span><br><span class="line">   * 切片</span><br><span class="line"></span><br><span class="line">     * 一次至少删除一个元素</span><br><span class="line">       * 生成一个新的对象</span><br><span class="line">       * 不生成新列表</span><br><span class="line"></span><br><span class="line">   * clear()</span><br><span class="line"></span><br><span class="line">     * 清空列表（列表仍然存在）</span><br><span class="line"></span><br><span class="line">   * del</span><br><span class="line"></span><br><span class="line">     * 删除列表（列表不存在）</span><br><span class="line"></span><br><span class="line">10. 列表元素的修改操作</span><br><span class="line"></span><br><span class="line">    * 为指定索引的元素赋予了一个新值</span><br><span class="line">    * 为指定的切片赋予了一个新值</span><br><span class="line"></span><br><span class="line">11. 列表的排序操作</span><br><span class="line"></span><br><span class="line">    * sort()，不生成新的列表</span><br><span class="line"></span><br><span class="line">      * &#96;&#96;&#96;python</span><br><span class="line">        myList1 &#x3D; [200, 100, 300]</span><br><span class="line">        myList1.sort()</span><br><span class="line">        print(myList1)</span><br></pre></td></tr></table></figure><p> <img src="C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210115223946547.png" alt="image-20210115223946547"></p></li><li><p>```python<br>myList1 = [200, 100, 300]<br>myList1.sort(reverse=True)<br>print(myList1)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    ![image-20210115224131974](C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210115224131974.png)</span><br><span class="line"></span><br><span class="line">* sorted()，生成新的列表</span><br><span class="line"></span><br><span class="line">  * &#96;&#96;&#96;python</span><br><span class="line">    myList1 &#x3D; [200, 100, 300]</span><br><span class="line">    myList2 &#x3D; sorted(myList1)</span><br><span class="line">    print(myList2)</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210115224450460.png" alt="image-20210115224450460"></p></li></ul></li></ul></li><li><p>列表生成式</p><ul><li><p>[表达式 for in range(1,10)]</p></li><li><p>```python<br>myList1 = [i*i for i in range(1, 10)]<br>print(myList1)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">      ![image-20210115225442011](C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210115225442011.png)</span><br><span class="line"></span><br><span class="line">### 字典 ###</span><br><span class="line"></span><br><span class="line">1. 字典的创建</span><br><span class="line"></span><br><span class="line">   * 最常见的方式，使用&#123;&#125;</span><br><span class="line"></span><br><span class="line">     * &#96;&#96;&#96;python</span><br><span class="line">       myDict &#x3D; &#123;&#39;hello&#39;: 1, &#39;World&#39;: 2, &#39;Python&#39;: 3&#125;</span><br><span class="line">       print(myDict)</span><br></pre></td></tr></table></figure><p> <img src="C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210116155845964.png" alt="image-20210116155845964"></p></li></ul></li></ol><ul><li><p>内置函数dict()</p><ul><li>```python<br>myDict = dict(Hello=1, World=2, Python=3)<br>print(myDict)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">       ![image-20210116160122457](C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210116160122457.png)</span><br><span class="line"></span><br><span class="line">2. 字典元素的获取</span><br><span class="line"></span><br><span class="line">   * []</span><br><span class="line"></span><br><span class="line">     * &#96;&#96;&#96;python</span><br><span class="line">       myDict[key]</span><br></pre></td></tr></table></figure></li></ul></li><li><p>get()</p><ul><li><p>```python<br>myDict.get(key)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">   * 区别：key不存在，[]抛出异常，get()返回None，可以通过参数设置默认value实现getOrDefault</span><br><span class="line"></span><br><span class="line">3. 字典的常用操作</span><br><span class="line"></span><br><span class="line">   * key的判断</span><br><span class="line"></span><br><span class="line">     * in 和 not in</span><br><span class="line"></span><br><span class="line">   * 字典元素的删除</span><br><span class="line"></span><br><span class="line">     * del：删除指定键值对</span><br><span class="line"></span><br><span class="line">       * &#96;&#96;&#96;python</span><br><span class="line">         del myDict[key]</span><br></pre></td></tr></table></figure></li><li><p>clear：清空字典元素</p><ul><li>```python<br>myDict.clear<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 字典元素的增加和修改</span><br><span class="line"></span><br><span class="line">  * &#96;&#96;&#96;python</span><br><span class="line">    myDict[key]&#x3D;value</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>获取字典视图</p><ul><li>keys()获取字典中所有的key</li><li>values()获取字典中所有的value</li><li>items()获取所有的键值对，转换成列表，列表内的元素是元组</li></ul></li><li><p>字典元素的遍历</p><ul><li><p>```python<br>for item in myDict:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">4. 字典的特点</span><br><span class="line"></span><br><span class="line">   * 字典中的所有元素都是一个键值对，key不允许重复，value允许重复</span><br><span class="line">   * 字典中的元素是无序的</span><br><span class="line">   * 字典中的key必须是不可变对象</span><br><span class="line">   * 字典也可以根据需要动态地伸缩</span><br><span class="line">   * 字典会浪费较大的内存，是一种空间换时间的数据结构</span><br><span class="line"></span><br><span class="line">5. 字典生成</span><br><span class="line"></span><br><span class="line">   * 内置函数zip，用于将可迭代对象作为参数，将对象中元素打包成一个元组，然后返回由这些元组组成的列表</span><br><span class="line"></span><br><span class="line">     * &#96;&#96;&#96;python</span><br><span class="line">       myKeys &#x3D; [&#39;hello&#39;, &#39;world&#39;, &#39;python&#39;]</span><br><span class="line">       myValues &#x3D; [1, 2, 3]</span><br><span class="line">       myDict &#x3D; zip(myKeys, myValues)</span><br><span class="line">       print(list(myDict))</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210116165841682.png" alt="image-20210116165841682"></p></li></ul></li><li><p>字典生成式</p><ul><li>```python<br>myKeys = [‘hello’, ‘world’, ‘python’]<br>myValues = [1, 2, 3]<br>myDict = {item: val for item, val in zip(myKeys, myValues)}<br>print(myDict)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">       ![image-20210116170208645](C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210116170208645.png)</span><br><span class="line"></span><br><span class="line">### 元组 ###</span><br><span class="line"></span><br><span class="line">1. Python的内置的数据结构之一，是一个不可变序列</span><br><span class="line"></span><br><span class="line">2. 不可变序列和可变序列</span><br><span class="line"></span><br><span class="line">   * 不可变序列，没有增删改操作：元组，字符串</span><br><span class="line">   * 可变序列：字典，列表</span><br><span class="line"></span><br><span class="line">3. 元组的创建</span><br><span class="line"></span><br><span class="line">   * ()可以省略小括号</span><br><span class="line"></span><br><span class="line">     * &#96;&#96;&#96;python</span><br><span class="line">       myTuple &#x3D; (&#39;Python&#39;, &#39;hello&#39;, 90)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>使用内置函数tuple()</p><ul><li>```python<br>myTuple = tuple(‘Python’, ‘hello’, 90)<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 只包含一个元素的元组需要使用逗号和小括号</span><br><span class="line"></span><br><span class="line">  * &#96;&#96;&#96;</span><br><span class="line">    myTuple &#x3D; (10, )</span><br></pre></td></tr></table></figure></li></ul></li></ul><ol start="4"><li><p>为什么要将元组设计成不可变序列</p><ul><li>在多任务环境下，同时操作对象的时不需要加锁，因此，在程序中尽量使用不可变序列</li><li>元组中存储的是对象的引用<ul><li>如果元组中的对象本身是不可变对象，则不能再引用其他对象</li><li>如果元组中的对象是可变对象，则可变对象的引用不允许改变，但数据可以改变</li></ul></li></ul></li><li><p>元组的遍历</p><ul><li><p>元组是可迭代对象，可以用for……in进行遍历</p><ul><li>```python<br>for item in myTuple<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">## Day 5 (2021.01.15) ##</span><br><span class="line"></span><br><span class="line">### 集合</span><br><span class="line"></span><br><span class="line">1. Python语言提供的内置数据结构</span><br><span class="line"></span><br><span class="line">2. 与列表字典一样都属于可变类型的序列</span><br><span class="line"></span><br><span class="line">3. 集合是没有value的字典，不允许有重复元素</span><br><span class="line"></span><br><span class="line">4. 集合的创建</span><br><span class="line"></span><br><span class="line">   * &#123;&#125;</span><br><span class="line"></span><br><span class="line">     * &#96;&#96;&#96;python</span><br><span class="line">       mySet &#x3D; &#123;1,2,3,4,5&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>set()</p><ul><li><p>可以用元组，列表，range()函数，字符串，集合</p></li><li><p>```python<br>mySet = set([1,2,3,4,5])</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">5. 集合的常用操作</span><br><span class="line"></span><br><span class="line">   * 集合元素的判断</span><br><span class="line"></span><br><span class="line">     * in和not in</span><br><span class="line"></span><br><span class="line">   * 集合元素的添加</span><br><span class="line"></span><br><span class="line">     * add()，一次添加一个元素</span><br><span class="line"></span><br><span class="line">       * &#96;&#96;&#96;python</span><br><span class="line">         mySet.add(key)</span><br></pre></td></tr></table></figure></li><li><p>update()，一次至少添加一个元素，可以使用元组，集合</p><ul><li><p>```python<br>mySet.update(other)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">   * 集合元素的删除</span><br><span class="line"></span><br><span class="line">     * remove()：一次删除一个指定元素，如果指定元素不存在抛出异常</span><br><span class="line">     * discard()：一次删除一个指定元素，如果指定的元素不存在不抛出异常</span><br><span class="line">     * pop()：一次删除一个任意元素</span><br><span class="line">     * clear()：清空集合</span><br><span class="line"></span><br><span class="line">6. 集合之间的关系</span><br><span class="line"></span><br><span class="line">   * 两集合是否相等(元素相同即可)</span><br><span class="line">     * &#x3D;&#x3D;和！&#x3D;</span><br><span class="line">   * 一个集合是否是另一个集合的子集</span><br><span class="line">     * issubset</span><br><span class="line">   * 一个集合是否是另一个集合的超集</span><br><span class="line">     * issuperset</span><br><span class="line">   * 两个集合是否有交集</span><br><span class="line">     * isdisjoint</span><br><span class="line"></span><br><span class="line">7. 集合的数据操作</span><br><span class="line"></span><br><span class="line">   * 交集</span><br><span class="line">     * intersection()</span><br><span class="line">     * &amp;</span><br><span class="line">     * &amp; 和 intersection()等价</span><br><span class="line">   * 并集</span><br><span class="line">     * union()</span><br><span class="line">     * |</span><br><span class="line">     * | 和 union()等价</span><br><span class="line">   * 差集</span><br><span class="line">     * difference()</span><br><span class="line">     * -</span><br><span class="line">     * -和difference()等价</span><br><span class="line">   * 对称差集(A + B - (A &amp; B))</span><br><span class="line">     * symmetric_difference()</span><br><span class="line">     * ^</span><br><span class="line">     * ^和symmetric_difference()等价</span><br><span class="line"></span><br><span class="line">8. 集合生成式‘</span><br><span class="line"></span><br><span class="line">   * &#123;表达式 for i in range(start,stop)&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 字符串 ###</span><br><span class="line"></span><br><span class="line">1. 字符串驻留机制</span><br><span class="line"></span><br><span class="line">   * 进保存一份相同且不可变字符串的方法，不同的值被放在字符串的驻留池，后续创建相同字符串时，不会开辟新空间，而是把该字符串的地址赋给新创建的变量</span><br><span class="line">   * 在需要进行字符串拼接时建议使用str类型的join方法，因为join先计算出所有字符串的长度然后再拷贝，只new一次对象，效率高</span><br><span class="line"></span><br><span class="line">2. 字符串的常用操作</span><br><span class="line"></span><br><span class="line">   * 字符串的查询操作</span><br><span class="line"></span><br><span class="line">     * index()：查找子串第一次出现的位置，如果查找的字串不存在，抛出异常</span><br><span class="line">     * rindex()：查找子串最后一次出现的位置，如果查找的字串不存在，抛出异常</span><br><span class="line">     * find()：查找子串第一次出现的位置，如果查找的字串不存在，返回-1</span><br><span class="line">     * rfind()：查找子串最后一次出现的位置，如果查找的字串不存在，返回-1</span><br><span class="line"></span><br><span class="line">   * 字符串的大小写转换操作</span><br><span class="line"></span><br><span class="line">     * upper()：把字符串中所有字符都转成大写字母</span><br><span class="line">     * lower()：把字符串中所有字符都转成小写字母</span><br><span class="line">     * swapcase()：大写变小写，小写变大写</span><br><span class="line">     * capitalize()：把第一个字符转成大写，其余字符转为小写</span><br><span class="line">     * title()：每个单词的第一个字符转大写，每个单词剩余字符转为小写</span><br><span class="line"></span><br><span class="line">   * 字符串内容对齐操作</span><br><span class="line"></span><br><span class="line">     * center()：居中对齐，第一个参数指定宽度，第二个参数指定填充字符，默认为空格，如果指定宽度小于实际宽度则返回原字符串</span><br><span class="line">     * ljust()：左对齐，第一个参数指定宽度，第二个参数指定填充符，默认为空格，如果设置宽度小于实际宽度则返回原字符串</span><br><span class="line">     * rjust()：右对齐，第一个参数指定宽度，第二个参数指定填充符，默认时空格，如果设置宽度小于实际宽度则返回原字符串</span><br><span class="line">     * zfill()：右对齐，左边用0填充，该方法只接受一个参数，用于指定字符串的宽度，如果指定的宽度小于等于字符串的长度，则返回原字符串</span><br><span class="line"></span><br><span class="line">   * 字符串劈分操作</span><br><span class="line"></span><br><span class="line">     * split()</span><br><span class="line">       * 从字符串的左边开始劈分，默认劈分字符为空格，返回值为一个列表</span><br><span class="line">       * 通过参数sep指定劈分字符</span><br><span class="line">       * 通过参数maxsplit指定劈分字符串时的最大劈分次数，在经过最大次劈分后，剩余的子串单独作为一个部分</span><br><span class="line">     * rsplit()</span><br><span class="line">       * 从字符串的右边开始劈分，默认劈分字符为空格，返回值为一个列表</span><br><span class="line">       * 通过参数sep指定劈分字符</span><br><span class="line">       * 通过参数maxsplit指定劈分字符串时的最大劈分次数，在经过最大次劈分后，剩余的子串单独作为一个部分</span><br><span class="line"></span><br><span class="line">   * 字符串判断操作</span><br><span class="line"></span><br><span class="line">     * isidentifier()：判断指定字符串是不是合法的标识符</span><br><span class="line">     * isspace()：判断指定字符串是否全部由空白字符组成（回车，换行，水平制表符）</span><br><span class="line">     * isalpha()：判断指定字符串是否全部由字母组成</span><br><span class="line">     * isdecimal()：判断指定字符串是否全部由十进制的数字组成</span><br><span class="line">     * isnumeric()：判断指定字符串是否全部由数字组成</span><br><span class="line">     * isalnum()：判断指定字符串是否全部由字母和数字组成</span><br><span class="line"></span><br><span class="line">   * 字符串的替换和合并</span><br><span class="line"></span><br><span class="line">     * replace()：第一个参数指定被替换的子串，第二个参数指定替换字串的字符串，该方法返回替换后得到的字符串，替换前的字符串不发生变化，调用该方法时可以通过第三个参数指定最大替换次数</span><br><span class="line">     * join()：将列表或元组中的字符串合并成一个字符串</span><br><span class="line"></span><br><span class="line">   * 字符串的比较操作</span><br><span class="line"></span><br><span class="line">     * 运算符：&gt;，&gt;&#x3D;,&lt;,&lt;&#x3D;,&#x3D;&#x3D;,!&#x3D;</span><br><span class="line">     * 比较规则：从两字符串的第一个字符开始比较，若相等依次比较，直到不同为止</span><br><span class="line"></span><br><span class="line">   * 字符串的切片操作</span><br><span class="line"></span><br><span class="line">     * 切片操作将产生新的对象</span><br><span class="line"></span><br><span class="line">   * 格式化字符串</span><br><span class="line"></span><br><span class="line">     * %做占位符</span><br><span class="line"></span><br><span class="line">       * %s表示字符串</span><br><span class="line"></span><br><span class="line">       * %i或%d表示整数</span><br><span class="line"></span><br><span class="line">       * %f表示浮点数</span><br><span class="line"></span><br><span class="line">       * &#96;&#96;&#96;python</span><br><span class="line">         name &#x3D; &#39;Python&#39;</span><br><span class="line">         print(&#39;Hello,%s&#39; % name)</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210117084149798.png" alt="image-20210117084149798"></p></li></ul></li><li><p>{}做占位符</p><ul><li><p>```python<br>name = ‘Python’<br>thing = ‘Study’<br>print(‘Hello,{0},I love{1}’.format(name, thing))</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    ![image-20210117084435744](C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210117084435744.png)</span><br><span class="line"></span><br><span class="line">* f-string</span><br><span class="line"></span><br><span class="line">  * &#96;&#96;&#96;</span><br><span class="line">    name &#x3D; &#39;Python&#39;</span><br><span class="line">    thing &#x3D; &#39;Study&#39;</span><br><span class="line">    print(f&#39;Hello, &#123;name&#125;, I Love &#123;thing&#125;&#39;) </span><br></pre></td></tr></table></figure><p><img src="C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210117084704044.png" alt="image-20210117084704044"></p></li></ul></li></ul></li></ul></li></ol><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><ol><li>函数就是执行特定任务和完成特定功能的一段代码</li><li>函数的用处<ul><li>复用代码</li><li>隐藏实现细节</li><li>提高可维护性</li><li>提高可读性便于调试</li></ul></li><li>函数的创建<ul><li>def </li></ul></li><li>函数的参数传递<ul><li>位置实参<ul><li>根据形参对应的位置进行实参传递</li></ul></li><li>关键字实参<ul><li>根据形参名称进行实参传递</li><li>调用函数时，使用赋值语句，赋予指定形参对应的值</li></ul></li></ul></li><li>函数的返回值<ul><li>函数返回多个值时，结果为元组</li><li>如果函数没有返回值，return省略不写</li><li>如果函数的返回值为1个，直接返回</li></ul></li><li>函数的参数定义<ul><li>个数可变的位置参数<ul><li>定义函数时，可能无法事先确定传递的位置实参的个数时，使用可变的位置参数</li><li>使用*定义个数可变的位置形参</li><li>实参为一个元组</li></ul></li><li>个数可变的关键字形参<ul><li>定义函数时，无法实现确定传递的关键字实参的个数时，使用可变的关键字形参</li><li>使用**定义个数可变的关键字形参</li><li>实参为一个字典</li></ul></li></ul></li></ol><h3 id="模块"><a href="#模块" class="headerlink" title="模块"></a>模块</h3><ol><li><p>一个模块包含多个函数，类</p></li><li><p>扩展名为.py的文件就是一个模块</p></li><li><p>使用模块的好处</p><ul><li>方便其他程序和脚本的导入并使用</li><li>避免函数名和变量名冲突</li><li>提高代码的可维护性</li><li>提高代码的可重用性</li></ul></li><li><p>模块的创建和导入</p><ul><li><p>模块的创建</p><ul><li>创建一个.py文件</li></ul></li><li><p>模块的导入</p><ul><li>import 模块名称 [as 模块别名]</li><li>from 模块名称 import 函数/变量/类</li></ul></li></ul></li><li><p>以主程序形式运行</p><ul><li><p>在每个模块的定义中都包括一个记录模块名称的变量_name_，程序可以检查变量，以确定他们在那个模块中执行。如果一个模块不是被导入到其他程序中执行，那么他可能在解释器的顶级模块中执行</p></li><li><p>顶级模块的__name__变量的值为_main_</p></li></ul></li></ol><h2 id="Day-6-2021-01-16"><a href="#Day-6-2021-01-16" class="headerlink" title="Day 6 (2021.01.16)"></a>Day 6 (2021.01.16)</h2><h3 id="异常类型"><a href="#异常类型" class="headerlink" title="异常类型"></a>异常类型</h3><ol><li>常见异常类型<ul><li>ZeroDivisionError：除（或取余）0（所有数据类型）</li><li>IndexError：序列中索引不存在</li><li>KeyError：映射中键不存在</li><li>NameError：未声明/初始化对象（没有属性）</li><li>SyntaxError： Python语法错误</li><li>ValueError：传入无效的参数</li></ul></li><li>异常处理机制<ul><li>异常处理模块<ul><li>traceback：打印异常信息</li><li>try except捕获</li></ul></li></ul></li></ol><h3 id="文件读写"><a href="#文件读写" class="headerlink" title="文件读写"></a>文件读写</h3><ol><li>常用的文件打开模式<ul><li>r：以只读模式打开文件，文件的指针将会放在文件的开头</li><li>w：以只写模式打开文件，文件不存在则创建文件，文件存在则覆盖原有内容</li><li>a：以追加模式打开文件，如果文件不存在则创建，如果存在则在文件末尾追加内容</li><li>b：以二进制方式打开文件，不能单独使用，需要与其他模式一起使用，rb或者wb</li><li>+：以读写方式打开文件，不能单独使用，需要与其他模式一起使用</li></ul></li><li>文件分类<ul><li>按文件中数据的组织形式，文件分为<ul><li>文本文件，存储的是普通字符文本，可以用记事本程序打开</li><li>二进制文件，把数据内容用字节进行存储，无法用记事本打开</li></ul></li></ul></li><li>文件对象的常用方法<ul><li>read()：从文件中读取指定参数个字节或者字符内容</li><li>readline()：从文本文件中读取一行内容</li><li>readlines ()：把文本文件中每一行都作为独立的 字符串对象，并将这些对象放入列表中返回</li><li>write()：将指定字符串写入文件</li><li>writelines()：将字符串写入文本文件中，不添加换行符</li><li>seek()：移动文件指针，第二个参数为0时表示从文件头开始计算，为1时表示从当前位置开始计算，为2时表示从文件尾开始计算</li><li>tell()：返回文件指针当前所在的位置</li><li>flush()：将缓冲区的内容写入文件，但不关闭文件</li><li>close：把缓冲区的内容写入文件并关闭文件，释放相关资源</li></ul></li></ol><h3 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h3><ol><li><p>类与对象</p><ul><li><p>类是多个类似食物组成的群体的统称</p></li><li><p>python中一切皆对象</p></li><li><p>创建类的语法</p><ul><li>```python<br>class student:<pre><code>pass</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* 类的组成</span><br><span class="line"></span><br><span class="line">  * 类属性</span><br><span class="line">  * 实例方法</span><br><span class="line">  * 静态方法</span><br><span class="line">  * 类方法</span><br><span class="line"></span><br><span class="line">* 类名的规范：每个单词的首字母大写，其余小写</span><br><span class="line"></span><br><span class="line">* 创建对象的语法</span><br><span class="line"></span><br><span class="line">  * &#96;&#96;&#96;python</span><br><span class="line">    实例名 &#x3D; 类型()</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><p>三大特征</p><ul><li><p>封装</p><ul><li>提高程序安全性</li><li>python中没有专门修饰符表示私有，可以在属性前加两个_</li></ul></li><li><p>继承</p><ul><li><p>提高代码复用性</p></li><li><pre><code>class 子类类名 (父类1，父类2……)</code></pre></li><li><p>如果一个类没有继承任何类，则默认继承object</p></li><li><p>Python支持多继承</p></li><li><p>定义字类时，必须在其构造函数中调用父类的构造函数</p></li></ul></li><li><p>多态</p><ul><li>提高程序的可拓展性和可维护性</li><li>即便不知道一个变量所引用的对象到底是什么类型的，仍然可以通过这个变量调用方法</li><li>方法重写<ul><li>如果字类对继承自父类的某个属性或方法不满意，可以在子类中对其进行重新编写</li><li>字类重写后的方法中可以通过super().方法名调用父类中被重写的方法</li></ul></li></ul></li></ul></li></ol><h2 id="Day-7-2021-1-17"><a href="#Day-7-2021-1-17" class="headerlink" title="Day 7  (2021.1.17)"></a>Day 7  (2021.1.17)</h2><h3 id="日期和时间"><a href="#日期和时间" class="headerlink" title="日期和时间"></a>日期和时间</h3><ol><li>Python提供了time和calendar模块来格式化时间和日期</li><li>时间间隔是以秒为单位的浮点小数</li><li>每个时间戳都是自1970.1.1开始计算的</li><li>时间元组<ul><li>很多python函数用一个元组装起来的九组数字处理时间</li><li><img src="C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210117122807083.png" alt="image-20210117122807083"></li></ul></li><li>获取格式化时间<ul><li>asctime()</li><li>可以通过time模块的strftime来格式化日期</li><li>python中时间日期格式化符号<ul><li><img src="C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210117123106846.png" alt="image-20210117123106846"></li></ul></li></ul></li><li>获取某月的日历<ul><li>calendar模块由广泛的方法用来处理年历个月历</li></ul></li></ol><h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><ol><li>正则表达式是一个特别的字符序列，他能帮助你方便的检查一个字符串是否与某种格式相匹配</li><li>Python 自1.5版本起增加了re 模块，它提供 Perl 风格的正则表达式模式。re 模块使 Python 语言拥有全部的正则表达式功能。 compile 函数根据一个模式字符串和可选的标志参数生成一个正则表达式对象。该对象拥有一系列方法用于正则表达式匹配和替换。 re 模块也提供了与这些方法功能完全一致的函数，这些函数使用一个模式字符串做为它们的第一个参数。</li><li>正则表达式</li><li><img src="C:\Users\Mr.J\AppData\Roaming\Typora\typora-user-images\image-20210117124428719.png" alt="image-20210117124428719"></li><li>主要函数<ul><li>re.match()：尝试从字符串的起始位置匹配一个模式，如果不是起始位置匹配成功的话，match()就返回none</li><li>re.search()：扫描整个字符串并返回第一个成功的匹配</li><li>re.sub()：用于替换字符串中的匹配项</li><li>re.complie()：编译正则表达式，生成一个正则表达式（ Pattern ）对象</li><li>re.findall()：在字符串中找到正则表达式所匹配的所有子串，并返回一个列表，如果没有找到匹配的，则返回空列表</li><li>re.finditer()：在字符串中找到正则表达式所匹配的所有子串，并把它们作为一个迭代器返回</li><li>re.split()：按照够匹配的子串将字符串分割后返回列表</li></ul></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;我的Python学习记录&quot;&gt;&lt;a href=&quot;#我的Python学习记录&quot; class=&quot;headerlink&quot; title=&quot;我的Python学习记录&quot;&gt;&lt;/a&gt;我的Python学习记录&lt;/h1&gt;&lt;p&gt;&lt;/br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/2021-4-19_3.jpg&quot; style=&quot;width:20%;height:20%&quot; /&gt;&lt;/p&gt;
&lt;p&gt; &lt;/br&gt;</summary>
    
    
    
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Matplolib</title>
    <link href="http://example.com/2021/04/19/Matplolib/"/>
    <id>http://example.com/2021/04/19/Matplolib/</id>
    <published>2021-04-19T02:55:44.000Z</published>
    <updated>2021-05-08T05:54:24.647Z</updated>
    
    <content type="html"><![CDATA[<h1 id="matplotlib"><a href="#matplotlib" class="headerlink" title="matplotlib"></a>matplotlib</h1><p></br><img src="https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/2021-4-19_1.jpg" style="width:20%;height:20%" /></p><p></br><span id="more"></span></p><h3 id="折线图"><a href="#折线图" class="headerlink" title="折线图"></a>折线图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> matplotlib <span class="keyword">import</span> pyplot <span class="keyword">as</span> plt <span class="comment">#导入pyplot</span></span><br><span class="line"><span class="comment"># as表示plt是pyplot的别名</span></span><br><span class="line">x = <span class="built_in">range</span>(<span class="number">2</span>,<span class="number">26</span>,<span class="number">2</span>) <span class="comment"># x轴的取值</span></span><br><span class="line">y = [<span class="number">15</span>, <span class="number">13</span>, <span class="number">14.5</span>, <span class="number">17</span>, <span class="number">20</span>, <span class="number">25</span>, <span class="number">26</span>, <span class="number">26</span>, <span class="number">24</span>, <span class="number">22</span>, <span class="number">18</span>, <span class="number">15</span>] <span class="comment"># y轴的取值</span></span><br><span class="line">plt.plot(x,y) <span class="comment"># plot用于绘制折线图</span></span><br><span class="line">plt.show() <span class="comment">#展示绘制的图形</span></span><br></pre></td></tr></table></figure><ol><li><p>设置图片大小和清晰度</p><ul><li>```python<br>fig = plt.figure(figsize=(20,8),dpi=80)<h1 id="figsize-调整图片大小"><a href="#figsize-调整图片大小" class="headerlink" title="figsize 调整图片大小"></a>figsize 调整图片大小</h1><h1 id="dpi-图像模糊的时候可以传入dpi参数"><a href="#dpi-图像模糊的时候可以传入dpi参数" class="headerlink" title="dpi 图像模糊的时候可以传入dpi参数"></a>dpi 图像模糊的时候可以传入dpi参数</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">2. 将图片保存为矢量图</span><br><span class="line"></span><br><span class="line">   * &#96;&#96;&#96;python</span><br><span class="line">     savefig(&quot;&quot;) # 将图片保存为矢量图格式，不会因放大而失真</span><br></pre></td></tr></table></figure></li></ul></li><li><p>设置刻度</p><ul><li>```python<br>plt.xticks(x[::step]) # 通过设置列表的步长来设置刻度<br>plt.yticks(range(min(y),max(y) + 1)) # 去掉0到y取值最小值的空档<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">4. 设置x轴显示角度</span><br><span class="line"></span><br><span class="line">   * &#96;&#96;&#96;python</span><br><span class="line">     plt.xticks(x,rotation&#x3D;90) #顺时针旋转90度</span><br></pre></td></tr></table></figure></li></ul></li><li><p>设置中文</p><ul><li><p>matplotlib默认不支持中文字符</p></li><li><p>fc-list  :lang=zh 查找支持的中文字体</p></li><li><p>```python<br>font = {‘family’ : ‘MicroSoft YaHei’, </p><pre><code>    &#39;weight&#39; : &#39;bold&#39;,     &#39;size&#39; : &#39;larger&#39;&#125;</code></pre><h1 id="family-字体"><a href="#family-字体" class="headerlink" title="family 字体"></a>family 字体</h1><h1 id="weight-粗细"><a href="#weight-粗细" class="headerlink" title="weight 粗细"></a>weight 粗细</h1><h1 id="size-大小"><a href="#size-大小" class="headerlink" title="size 大小"></a>size 大小</h1><p>matplotlib.rc(“font”,**font)</p><h1 id="或者"><a href="#或者" class="headerlink" title="或者"></a>或者</h1><p>matplotlib.rc(“font”,family=’MicroSoft YaHei’,weight=’bold’)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* &#96;&#96;&#96;python</span><br><span class="line">  # 另一种方式</span><br><span class="line">  from matplotlib import font_manager</span><br><span class="line">  my_font &#x3D; font_manager.FontProperties(fname&#x3D;&quot;myfname&quot;)</span><br><span class="line">  plt.xticks(x,fontproperties&#x3D;my_font)</span><br></pre></td></tr></table></figure></li></ul></li><li><p>给图像添加描述信息</p><ul><li>```python<br>plt.xlabel(“”) # x轴单位<br>plt.ylabel(“”) # y轴单位<br>plt.title(“”) # 图表标题<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">7. 绘制网格</span><br><span class="line"></span><br><span class="line">   * &#96;&#96;&#96;python</span><br><span class="line">     plt.grid() # 默认状态</span><br><span class="line">     plt.grid(alpha&#x3D;0.4) # 设置不透明度</span><br></pre></td></tr></table></figure></li></ul></li><li><p>添加图例</p><ul><li>```python<br>plt.legend(prop = myfont) # 指定字体<br>plt.legend(loc = “”) # 指定位置<h1 id="upper-上-left-左-right-右"><a href="#upper-上-left-左-right-右" class="headerlink" title="upper 上 left 左 right 右"></a>upper 上 left 左 right 右</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">9. 设置图形样式</span><br><span class="line"></span><br><span class="line">   * &#96;&#96;&#96;python</span><br><span class="line">     plt.plot() # 可以指定参数</span><br><span class="line">     color &#x3D; &#39;r&#39; # 线条颜色</span><br><span class="line">     linestyle &#x3D; &#39;--&#39; # 线条风格</span><br><span class="line">     linewidth &#x3D; 5 # 线条粗细</span><br><span class="line">     alpha &#x3D; 0.5 # 透明度 </span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="散点图"><a href="#散点图" class="headerlink" title="散点图"></a>散点图</h3><ol><li><p>绘制散点图</p><ul><li>```python<br>plt.scatter(x1,x2) # 两个参数<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">2. 例：3月气温如下11,17,16,11,12,11,12,6,6,7,8,9,12,15,14,17,18,21,16,17,20,14,15,15,15,19,21,22,22,22,23，10月气温如下26,26,28,19,21,17,16,19,18,20,20,19,22,23,17,20,21,22,15,11,5,13,17,10,11,13,12,13,6</span><br><span class="line"></span><br></pre></td></tr></table></figure>from matplotlib import pyplot as plt<br>y_3 = [11,17,16,11,12,11,12,6,6,7,8,9,12,15,14,17,18,21,16,17,20,14,15,15,15,19,21,22,22,22,23] # 3月气温<br>y_10 = [26,26,28,19,21,17,16,19,18,20,20,19,22,23,17,20,21,22,15,11,5,13,17,10,11,13,12,13,6] # 10月气温<br>x_3 = range(1.32)<br>x_10 = range)(51,82) # x右移<br>plt.figure(figsize=(20,8),dpi=80) # 设置图形大小<br>plt.scatter(x_3,y_3) # 3月气温散点图<br>plt.scatter(x_10,y_10) # 10月气温散点图<br>_x = list(x_3) + list(x_10) # 整合x轴<br>_xtick_labels = [“3.{}”.format(i) for i in x_3] # 设置3月x轴显示<br>_xtick_labels = [“10.{}”.format(i-50) for i in x_10] # 设置10月x轴显示<br>plt.xticks(_x[::3],_xticks_labels[::3],rotation=45)<br>plt.show() <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 条形图 ###</span><br><span class="line"></span><br><span class="line">1. 绘制条形图</span><br><span class="line"></span><br><span class="line">   * &#96;&#96;&#96;python</span><br><span class="line">     plt.bar(x1,x2) # 两个参数，数字列表</span><br></pre></td></tr></table></figure></li></ul></li><li><p>例：</p><ul><li>```python<br>from matplotlib import pyplot as plt<br>x = [1,2,3,4,5,6,7,8,9,10,11]<br>y = [26,26,28,19,21,17,16,19]<br>plt.figure(figsize=(20,8),dpi=80)<br>plt.bar(range(len(a)),b,width = 0.3) # 纵向条形图用width改变柱宽<br>plt.barh (range(len(a)),b,height = 0.3,color=”orange”) # 横向条形图用height改变柱宽,color改变柱色<br>plt.xticks(range(len(a)),a,rotation=45)<br>plt.show() <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">3. 常用统计图对比</span><br><span class="line"></span><br><span class="line">   * 折线图：以这显得上升或下降来表示统计数量的增减变化的统计图</span><br><span class="line">     * 能够显示数据的变化趋势，反映事物的变化情况</span><br><span class="line">   * 直方图：有一系列高度不等的纵向条纹或线段表示u数据分布的情况，一般用横轴表示数据范围，纵轴表示分布情况</span><br><span class="line">     * 绘制连续性的数据，展示一组或多组数据的分布情况</span><br><span class="line">   * 条形图：排列在工作表的行或列中的数据可以绘制到条形图中</span><br><span class="line">     * 绘制离散性的数据，能够一眼看出各个数据的大小，比较数据之间的差别</span><br><span class="line">   * 散点图：用两组数据构成多个坐标点，考察坐标点的分布</span><br><span class="line">     * 判断变量之间是否存在数量关联趋势，展示离群点</span><br><span class="line"></span><br><span class="line">### 直方图 ###</span><br><span class="line"></span><br><span class="line">1. 绘制直方图</span><br><span class="line"></span><br><span class="line">   * &#96;&#96;&#96;python</span><br><span class="line">     plt.hist(x1,x2) # 传入两个参数，x1为数据，x2为分组数</span><br></pre></td></tr></table></figure></li></ul></li><li><p>例</p><ul><li><pre><code>from matplotlib import pyplot as plt a = [1,1,1,1,2,3,465,3,241,684,121,854,31,648,132,8464,13,67,463,64,134,1,32,643,345]d = 5 # 组距num_bins = (max(a) - min(a))//d # 计算组数plt.hist(a,num_bins)plt.xticks(range(min(a),max(a) + d),d)</code></pre></li></ul></li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;matplotlib&quot;&gt;&lt;a href=&quot;#matplotlib&quot; class=&quot;headerlink&quot; title=&quot;matplotlib&quot;&gt;&lt;/a&gt;matplotlib&lt;/h1&gt;&lt;p&gt;&lt;/br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/juuustjay/imageCloud/main/img/2021-4-19_1.jpg&quot; style=&quot;width:20%;height:20%&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;/br&gt;</summary>
    
    
    
    
    <category term="matplotlib" scheme="http://example.com/tags/matplotlib/"/>
    
  </entry>
  
</feed>
